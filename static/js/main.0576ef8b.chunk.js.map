{"version":3,"sources":["StackedBarChart.js","SingleBarChart.js","data.js","Graph.js","App.js","index.js"],"names":["margin","width","height","StackedBarChart","data","ref","useRef","draw","useCallback","svg","d3","current","selectAll","remove","subgroups","Object","keys","slice","groups","map","d","time","x","domain","range","padding","append","attr","call","text","y","color","stackedData","join","key","bandwidth","useEffect","SingleBarChart","Math","max","apply","length","xScale","yScale","enter","g","_","i","update","select","transition","randomizer","min","round","random","getData","maxSize","count","push","cat","dog","fish","getSingleData","Graph","componentProp","useState","setData","GraphComponent","onClick","App","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0576ef8b.chunk.js","sourcesContent":["import * as d3 from 'd3';\nimport React, { useRef, useEffect, useCallback } from 'react';\n\nconst mainWidth = 800;\nconst mainHeight = 400;\n\nconst margin = { top: 10, right: 30, bottom: 80, left: 50 };\nconst width = mainWidth - margin.left - margin.right;\nconst height = mainHeight - margin.top - margin.bottom;\n\nfunction StackedBarChart({ data }) {\n  const ref = useRef();\n\n  const draw = useCallback(() => {\n    const svg = d3.select(ref.current);\n\n    if (ref.current) {\n      svg.selectAll('*').remove();\n    }\n\n    // List of subgroups = header of the csv files = soil condition here\n    const subgroups = Object.keys(data[0]).slice(1);\n\n    // List of groups = species here = value of the first column called group -> I show them on the X axis\n    const groups = data.map((d) => d.time);\n\n    // Add X axis\n    const x = d3.scaleBand().domain(groups).range([0, width]).padding([0.2]);\n    svg\n      .append('g')\n      .attr('transform', `translate(${margin.left}, ${height})`)\n      .call(d3.axisBottom(x))\n      .selectAll('text')\n      .text((d) => d.slice(11))\n      .attr('transform', 'translate(-13,26) rotate(-90)');\n\n    // Add Y axis\n    const y = d3.scaleLinear().domain([0, 60]).range([height, 0]);\n    svg\n      .append('g')\n      .attr('transform', `translate(${margin.left})`)\n      .call(d3.axisLeft(y));\n\n    // color palette = one color per subgroup\n    const color = d3\n      .scaleOrdinal()\n      .domain(subgroups)\n      .range(['pink', 'magenta', 'purple']);\n\n    //stack the data? --> stack per subgroup\n    const stackedData = d3.stack().keys(subgroups)(data);\n\n    // Show the bars\n    svg\n      .append('g')\n      .selectAll('g')\n      // Enter in the stack data = loop key per key = group per group\n      .data(stackedData)\n      .join('g')\n      .attr('fill', (d) => color(d.key))\n      .selectAll('rect')\n      // enter a second time = loop subgroup per subgroup to add all rectangles\n      .data((d) => d)\n      .join('rect')\n      .attr('x', (d) => x(d.data.time))\n      .attr('transform', `translate(${margin.left})`)\n      .attr('y', (d) => y(d[1]))\n      .attr('height', (d) => y(d[0]) - y(d[1]))\n      .attr('width', x.bandwidth());\n  }, [data]);\n\n  useEffect(() => {\n    d3.select(ref.current)\n      .append('svg')\n      .attr('width', width + margin.left + margin.right)\n      .attr('height', height + margin.top + margin.bottom)\n      .append('g')\n      .attr('transform', `translate(${margin.left}, ${margin.top})`);\n    draw();\n  }, [data, draw]);\n\n  return <svg width={mainWidth} height={mainHeight} ref={ref}></svg>;\n}\n\nexport default StackedBarChart;\n","import * as d3 from \"d3\";\nimport React, { useRef, useEffect } from \"react\";\n\nconst rectWidth = 30;\n\nfunction SingleBarChart({ data }) {\n  const ref = useRef();\n  const height = Math.max(Math.max.apply(null, data), 200);\n  const width = rectWidth * data.length + 100;\n\n  const draw = () => {\n    const xScale = d3\n      .scaleBand()\n      .domain(Object.keys(data))\n      .range([0, width])\n      .padding(0.3);\n\n    const yScale = d3.scaleLinear().domain([0, height]).range([height, 0]);\n    const svg = d3.select(ref.current);\n    svg\n      .selectAll(\"g\")\n      .data(data)\n      .join(\n        (enter) => {\n          const g = enter.append(\"g\");\n\n          g.append(\"rect\")\n            .attr(\"x\", (_, i) => xScale(i))\n            .attr(\"y\", (d) => yScale(d))\n            .attr(\"height\", (d) => d)\n            .attr(\"width\", rectWidth)\n            .attr(\"stroke-width\", 1)\n            .attr(\"stroke\", \"plum\")\n            .attr(\"fill\", \"lightblue\");\n\n          g.append(\"text\")\n            .text((d) => d)\n            .join(\"text\")\n            .attr(\"x\", (_, i) => xScale(i))\n            .attr(\"y\", (d) => yScale(d))\n            .attr(\"width\", rectWidth)\n            .attr(\"dominant-baseline\", \"hanging\");\n\n          return g;\n        },\n        (update) => {\n          update\n            .select(\"rect\")\n            .transition()\n            .attr(\"y\", (d) => yScale(d))\n            .attr(\"height\", (d) => d);\n          update\n            .select(\"text\")\n            .transition()\n            .text((d) => d)\n            .attr(\"y\", (d) => yScale(d));\n        }\n      );\n  };\n\n  useEffect(() => {\n    d3.select(ref.current).attr(\"width\", width).attr(\"height\", height);\n  }, []);\n\n  useEffect(() => {\n    draw();\n    return () => {};\n  }, [data, draw]);\n\n  return <svg ref={ref}></svg>;\n}\n\nexport default SingleBarChart;\n","function randomizer(max = 1, min = 0) {\n  return Math.round(Math.random() * (max - min) + min);\n}\n\nexport const getData = (maxSize = 10, count = 20) => {\n  const data = [];\n  for (let i = 0; i < count; i++) {\n    data.push({\n      time: `2021-05-05 10:00:0${i}`,\n      cat: randomizer(maxSize),\n      dog: randomizer(maxSize),\n      fish: randomizer(maxSize),\n    });\n  }\n  return data;\n};\n\nexport const getSingleData = (count = 20) => {\n  const data = [];\n  for (let i = 0; i < count; i++) {\n    data.push(randomizer(100, 1));\n  }\n  return data;\n};\n","import { useState } from 'react';\n\n// https://www.d3-graph-gallery.com/graph/barplot_stacked_basicWide.html\n\nconst Graph = ({ componentProp, getData }) => {\n  const [data, setData] = useState(getData());\n  const GraphComponent = componentProp;\n\n  return (\n    <div>\n      <div>\n        <button onClick={() => setData(getData())}>Update Data</button>\n      </div>\n\n      <GraphComponent data={data} />\n    </div>\n  );\n};\n\nexport default Graph;\n","import StackedBarChart from \"./StackedBarChart\";\nimport SingleBarChart from \"./SingleBarChart\";\nimport { getSingleData, getData } from \"./data\";\nimport Graph from \"./Graph\";\n\n// https://www.d3-graph-gallery.com/graph/barplot_stacked_basicWide.html\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Graph componentProp={StackedBarChart} getData={getData} />\n      <Graph componentProp={SingleBarChart} getData={getSingleData} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}