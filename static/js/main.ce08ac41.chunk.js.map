{"version":3,"sources":["data.js","StackedBarChart.js","SingleBarChart.js","ScatterChart.js","LineChart.js","Graph.js","App.js","index.js"],"names":["randomizer","max","min","Math","round","random","dataColors","getData","maxSize","data","count","i","push","time","cat","dog","fish","cow","mouse","getSingleData","getLineData","last","next","x","y","animals","getScatterData","r","type","length","margin","width","height","StackedBarChart","ref","useRef","groups","map","d","subgroups","Object","keys","slice","stackedData","d3","color","domain","range","xScale","padding","yScale","rangeRound","draw","useCallback","svg","current","select","call","selectAll","text","attr","values","transition","join","enter","g","append","key","updateBars","update","selection","bandwidth","style","duration","on","mouseover","mouseleave","subgroupName","this","parentNode","datum","useEffect","SingleBarChart","textTransform","_","exit","remove","onClick","sort","a","b","ScatterChart","e","target","__data__","delay","u","LineChart","Graph","componentProp","useState","setData","GraphComponent","App","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ce08ac41.chunk.js","sourcesContent":["function randomizer(max = 1, min = 0) {\n  return Math.round(Math.random() * (max - min) + min);\n}\nexport const dataColors = [\"pink\", \"magenta\", \"purple\", \"green\", \"lightblue\"];\nexport const getData = (maxSize = 100) => {\n  const data = [];\n  const count = randomizer(25, 10);\n  for (let i = 0; i < count; i++) {\n    data.push({\n      time: `2021-05-05 10:00:0${i}`,\n      cat: randomizer(maxSize),\n      dog: randomizer(maxSize),\n      fish: randomizer(maxSize),\n      cow: randomizer(maxSize),\n      mouse: randomizer(maxSize),\n    });\n  }\n  return data;\n};\n\nexport const getSingleData = () => {\n  const data = [];\n  const count = randomizer(25, 10);\n  for (let i = 0; i < count; i++) {\n    data.push(randomizer(100, 1));\n  }\n  return data;\n};\n\nexport const getLineData = () => {\n  const data = [];\n  const count = 20;\n  let last = randomizer(100, 1);\n  for (let i = 0; i < count; i++) {\n    const next = last + randomizer(10, -10);\n    data.push({ x: i, y: next });\n    last = next;\n  }\n  return data;\n};\n\nconst animals = [\"cat\", \"dog\", \"fish\", \"cow\", \"mouse\"];\nexport const getScatterData = () => {\n  const data = [];\n  const count = randomizer(50, 10);\n  for (let i = 0; i < count; i++) {\n    data.push({\n      x: randomizer(100, 5),\n      y: randomizer(100, 10),\n      r: randomizer(20, 10),\n      type: animals[i % animals.length],\n    });\n  }\n  return data;\n};\n","import * as d3 from \"d3\";\nimport React, { useRef, useEffect, useCallback } from \"react\";\nimport { dataColors } from \"./data\";\n\nconst mainWidth = 1000;\nconst mainHeight = 400;\n\nconst margin = { top: 20, right: 30, bottom: 50, left: 50 };\nconst width = mainWidth - margin.left - margin.right;\nconst height = mainHeight - margin.top - margin.bottom;\n\nfunction StackedBarChart({ data }) {\n  const ref = useRef();\n\n  const groups = data.map((d) => d.time);\n  const subgroups = Object.keys(data[0]).slice(1);\n  const stackedData = d3.stack().keys(subgroups)(data);\n  const color = d3.scaleOrdinal().domain(subgroups).range(dataColors);\n\n  const xScale = d3.scaleBand().range([0, width]).padding([0.2]);\n  const yScale = d3.scaleLinear().rangeRound([height, 0]);\n\n  const draw = useCallback(() => {\n    const svg = d3.select(ref.current);\n\n    // update x-axis\n    xScale.domain(groups);\n    svg\n      .select(\".x-axis\")\n      .call(d3.axisBottom(xScale))\n      .selectAll(\"text\")\n      .text((d) => d.slice(11))\n      .attr(\"transform\", \"translate(-13,26) rotate(-90)\");\n\n    // update y-axis\n    yScale.domain([0, d3.max(data, (d) => d3.sum(Object.values(d))) * 1.2]);\n    svg.select(\".y-axis\").transition().call(d3.axisLeft(yScale));\n\n    svg\n      .selectAll(\"g.stacks\")\n      .selectAll(\"g.stack\")\n      .data(stackedData)\n      .join(\n        (enter) => {\n          const g = enter.append(\"g\").attr(\"class\", (d) => `stack ${d.key}`);\n\n          g.append(\"g\")\n            .attr(\"class\", \"bars\")\n            .attr(\"fill\", (d) => color(d.key));\n\n          updateBars(g.select(\".bars\"));\n\n          return g;\n        },\n        (update) => {\n          updateBars(update.select(\".bars\"));\n        }\n      );\n  }, [data]);\n\n  const updateBars = (selection) => {\n    selection\n      .selectAll(\"rect\")\n      .data((d) => d)\n      .join(\n        (enter) =>\n          enter\n            .append(\"rect\")\n            .attr(\"class\", \"bar\")\n            .attr(\"height\", (d) => yScale(d[0]) - yScale(d[1]))\n            .attr(\"width\", xScale.bandwidth())\n            .attr(\"x\", (d) => xScale(d.data.time))\n            .attr(\"y\", (d) => yScale(d[1]))\n            .attr(\"stroke\", \"grey\")\n            .style(\"opacity\", 0)\n            .call((enter) =>\n              enter.transition().duration(500).style(\"opacity\", 1)\n            )\n            .on(\"mouseover\", mouseover)\n            .on(\"mouseleave\", mouseleave),\n        (update) => {\n          update\n            .transition()\n            .attr(\"height\", (d) => yScale(d[0]) - yScale(d[1]))\n            .attr(\"width\", xScale.bandwidth())\n            .attr(\"x\", (d) => xScale(d.data.time))\n            .attr(\"y\", (d) => yScale(d[1]));\n        }\n      );\n  };\n\n  const mouseover = function () {\n    const subgroupName = d3.select(this.parentNode).datum().key;\n    d3.select(ref.current).selectAll(\".bar\").style(\"opacity\", 0.2);\n    d3.select(ref.current)\n      .selectAll(`.${subgroupName} rect`)\n      .style(\"opacity\", 1);\n  };\n\n  const mouseleave = function () {\n    d3.select(ref.current).selectAll(\".bar\").style(\"opacity\", 0.8);\n  };\n\n  // initialize graph\n  useEffect(() => {\n    const svg = d3.select(ref.current);\n    // create main viewport\n    svg\n      .attr(\"width\", mainWidth)\n      .attr(\"height\", mainHeight)\n      .append(\"g\")\n      .attr(\"class\", \"stacks\")\n      .attr(\"transform\", `translate(${margin.left})`);\n\n    // create x-axis\n    svg\n      .append(\"g\")\n      .attr(\"class\", \"x-axis\")\n      .attr(\"transform\", `translate(${margin.left}, ${height})`);\n\n    // create y-axis\n    svg\n      .append(\"g\")\n      .attr(\"class\", \"y-axis\")\n      .attr(\"transform\", `translate(${margin.left})`);\n  }, []);\n\n  useEffect(() => {\n    draw();\n  }, [data, draw, ref.current]);\n\n  return (\n    <div style={{ padding: \"10px 0\" }}>\n      <svg ref={ref}></svg>\n    </div>\n  );\n}\n\nexport default StackedBarChart;\n","import * as d3 from \"d3\";\nimport React, { useCallback, useRef, useEffect } from \"react\";\n\nconst mainWidth = 1000;\nconst mainHeight = 300;\n\nconst margin = { top: 20, right: 30, bottom: 50, left: 50 };\nconst width = mainWidth - margin.left - margin.right;\nconst height = mainHeight - margin.top - margin.bottom;\n\nfunction SingleBarChart({ data }) {\n  const ref = useRef();\n\n  const xScale = d3.scaleBand().range([0, width]).padding(0.3);\n  const yScale = d3.scaleLinear().range([height, 0]);\n\n  const sortAscending = () => {\n    data.sort((a, b) => d3.ascending(a, b));\n    draw();\n  };\n\n  const sortDesc = () => {\n    data.sort((a, b) => d3.descending(a, b));\n    draw();\n  };\n\n  const textTransform = (d) => {\n    return d > 10\n      ? `translate(${xScale.bandwidth() / 2}, 15)`\n      : `translate(${xScale.bandwidth() / 2}, -2)`;\n  };\n\n  const draw = useCallback(() => {\n    const svg = d3.select(ref.current);\n\n    xScale.domain(Object.keys(data));\n    svg\n      .select(\".x-axis\")\n      .call(d3.axisBottom(xScale))\n      .selectAll(\"text\")\n      .text((d) => +d + 1);\n\n    yScale.domain([0, d3.max(data) * 1.1]);\n    svg.select(\".y-axis\").transition().call(d3.axisLeft(yScale));\n\n    svg\n      .selectAll(\".bars\")\n      .selectAll(\".bar\")\n      .data(data)\n      .join(\n        (enter) => {\n          const g = enter.append(\"g\").attr(\"class\", \"bar\");\n\n          g.append(\"rect\")\n            .attr(\"x\", (_, i) => xScale(i))\n            .attr(\"y\", (d) => yScale(d))\n            .attr(\"height\", (d) => height - yScale(d))\n            .attr(\"width\", xScale.bandwidth())\n            .attr(\"stroke-width\", 1)\n            .attr(\"stroke\", \"black\")\n            .attr(\"fill\", \"pink\");\n\n          g.append(\"text\")\n            .text((d) => d)\n            .join(\"text\")\n            .attr(\"x\", (_, i) => xScale(i))\n            .attr(\"y\", (d) => yScale(d))\n            .attr(\"transform\", textTransform)\n            .attr(\"text-anchor\", \"middle\");\n\n          return g;\n        },\n        (update) => {\n          update\n            .select(\"rect\")\n            .transition()\n            .attr(\"x\", (_, i) => xScale(i))\n            .attr(\"y\", (d) => yScale(d))\n            .attr(\"height\", (d) => height - yScale(d))\n            .attr(\"width\", xScale.bandwidth());\n\n          update\n            .select(\"text\")\n            .transition()\n            .text((d) => d)\n            .attr(\"x\", (_, i) => xScale(i))\n            .attr(\"y\", (d) => yScale(d))\n            .attr(\"transform\", textTransform);\n        },\n        (exit) => {\n          exit.select(\"text\").remove();\n          exit.select(\"rect\").transition().style(\"opacity\", 0);\n          exit.transition().remove();\n        }\n      );\n  }, [data, height, width]);\n\n  useEffect(() => {\n    const svg = d3.select(ref.current);\n\n    // create viewport\n    svg\n      .attr(\"width\", mainWidth)\n      .attr(\"height\", mainHeight)\n      .append(\"g\")\n      .attr(\"class\", \"bars\")\n      .attr(\"transform\", `translate(${margin.left})`);\n\n    // create x-axis\n    svg\n      .append(\"g\")\n      .attr(\"class\", \"x-axis\")\n      .attr(\"transform\", `translate(${margin.left}, ${height})`);\n\n    // create y-axis\n    svg\n      .append(\"g\")\n      .attr(\"class\", \"y-axis\")\n      .attr(\"transform\", `translate(${margin.left})`);\n  }, []);\n\n  useEffect(() => {\n    draw();\n  }, [data, draw, ref.current]);\n\n  return (\n    <div>\n      <div>\n        <button onClick={sortAscending}>asc</button>\n        <button onClick={sortDesc}>desc</button>\n      </div>\n      <div style={{ padding: \"10px 0\" }}>\n        <svg ref={ref}></svg>\n      </div>\n    </div>\n  );\n}\n\nexport default SingleBarChart;\n","import * as d3 from \"d3\";\nimport React, { useRef, useEffect, useCallback } from \"react\";\nimport { dataColors } from \"./data\";\n\nconst mainWidth = 1000;\nconst mainHeight = 400;\n\nconst margin = { top: 20, right: 30, bottom: 50, left: 50 };\nconst width = mainWidth - margin.left - margin.right;\nconst height = mainHeight - margin.top - margin.bottom;\n\nfunction ScatterChart({ data }) {\n  const ref = useRef();\n\n  const xScale = d3.scaleLinear().range([0, width]);\n  const yScale = d3.scaleLinear().rangeRound([height, 0]);\n  const color = d3\n    .scaleOrdinal()\n    .domain(data.map((d) => d.type))\n    .range(dataColors);\n\n  const draw = useCallback(() => {\n    const svg = d3.select(ref.current);\n\n    // update x-axis\n    xScale.domain([0, d3.max(data, (d) => d.x)]);\n    svg.select(\".x-axis\").call(d3.axisBottom(xScale));\n\n    // update y-axis\n    yScale.domain([0, d3.max(data, (d) => d.y) * 1.2]);\n    svg.select(\".y-axis\").transition().call(d3.axisLeft(yScale));\n\n    svg\n      .selectAll(\".scatter\")\n      .selectAll(\"circle\")\n      .data(data)\n      .join(\n        (enter) => {\n          enter\n            .append(\"circle\")\n            .attr(\"fill\", \"red\")\n            .attr(\"stroke\", \"white\")\n            .attr(\"cx\", (d) => xScale(d.x))\n            .attr(\"cy\", (d) => yScale(d.y))\n            .attr(\"r\", (d) => d.r)\n            .call((e) => e.transition().attr(\"fill\", (d) => color(d.type)))\n            .on(\"mouseover\", (e) => {\n              d3.select(e.target)\n                .transition()\n                .style(\"opacity\", 0.8)\n                .attr(\"r\", 25);\n            })\n            .on(\"mouseleave\", (e) => {\n              const data = e.target.__data__;\n              d3.select(e.target)\n                .transition()\n                .attr(\"fill\", color(data.type))\n                .attr(\"r\", data.r);\n            });\n          return enter;\n        },\n        (update) => {\n          update\n            .transition()\n            .delay((_, i) => i * 50)\n            .duration(500)\n            .attr(\"fill\", \"none\")\n            .attr(\"stroke\", \"blue\")\n            .attr(\"cx\", (d) => xScale(d.x))\n            .attr(\"cy\", (d) => yScale(d.y))\n            .call((u) =>\n              u\n                .transition()\n                .duration(500)\n                .attr(\"stroke\", \"white\")\n                .attr(\"fill\", (d) => color(d.type))\n            );\n        },\n        (exit) =>\n          exit\n            .transition()\n            .duration(1000)\n            .attr(\"fill\", \"yellow\")\n            .attr(\"stroke-width\", 4)\n            .attr(\"stroke\", \"black\")\n            .call((exit) => exit.style(\"opacity\", 0).remove())\n      );\n  }, [data]);\n\n  // initialize graph\n  useEffect(() => {\n    const svg = d3.select(ref.current);\n    // create main viewport\n    svg\n      .attr(\"width\", mainWidth)\n      .attr(\"height\", mainHeight)\n      .append(\"g\")\n      .attr(\"class\", \"scatter\")\n      .attr(\"transform\", `translate(${margin.left})`);\n\n    // create x-axis\n    svg\n      .append(\"g\")\n      .attr(\"class\", \"x-axis\")\n      .attr(\"transform\", `translate(${margin.left}, ${height})`);\n\n    // create y-axis\n    svg\n      .append(\"g\")\n      .attr(\"class\", \"y-axis\")\n      .attr(\"transform\", `translate(${margin.left})`);\n  }, []);\n\n  useEffect(() => {\n    draw();\n  }, [data, draw, ref.current]);\n\n  return (\n    <div style={{ padding: \"10px 0\" }}>\n      <svg ref={ref}></svg>\n    </div>\n  );\n}\n\nexport default ScatterChart;\n","import * as d3 from \"d3\";\nimport React, { useRef, useEffect, useCallback } from \"react\";\nimport { dataColors } from \"./data\";\n\nconst mainWidth = 1000;\nconst mainHeight = 400;\n\nconst margin = { top: 20, right: 30, bottom: 50, left: 50 };\nconst width = mainWidth - margin.left - margin.right;\nconst height = mainHeight - margin.top - margin.bottom;\n\nfunction LineChart({ data }) {\n  const ref = useRef();\n\n  const xScale = d3.scaleLinear().range([0, width]);\n  const yScale = d3.scaleLinear().rangeRound([height, 0]);\n  const color = d3\n    .scaleOrdinal()\n    .domain(data.map((d) => d.type))\n    .range(dataColors);\n\n  const draw = useCallback(() => {\n    const svg = d3.select(ref.current);\n\n    // update x-axis\n    xScale.domain([0, d3.max(data, (d) => d.x)]);\n    svg.select(\".x-axis\").call(d3.axisBottom(xScale));\n\n    // update y-axis\n    yScale.domain(d3.extent(data, (d) => d.y));\n    svg.select(\".y-axis\").transition().call(d3.axisLeft(yScale));\n\n    svg\n      .selectAll(\".lines\")\n      .selectAll(\"path\")\n      .data([data]) // <---- wrap data in array!!!!\n      .join(\n        (enter) => {\n          return enter\n            .append(\"path\")\n            .attr(\"fill\", \"none\")\n            .attr(\"stroke-width\", 4)\n            .attr(\"stroke\", \"pink\")\n            .attr(\n              \"d\",\n              d3\n                .line()\n                .x((d) => xScale(d.x))\n                .y((d) => yScale(d.y))\n            );\n        },\n        (update) => {\n          update\n            .transition()\n            .attr(\"fill\", \"none\")\n            .attr(\"stroke-width\", 4)\n            .attr(\"stroke\", \"pink\")\n            .attr(\n              \"d\",\n              d3\n                .line()\n                .x((d) => xScale(d.x))\n                .y((d) => yScale(d.y))\n            );\n        }\n      );\n  }, [data]);\n\n  // initialize graph\n  useEffect(() => {\n    const svg = d3.select(ref.current);\n    // create main viewport\n    svg\n      .attr(\"width\", mainWidth)\n      .attr(\"height\", mainHeight)\n      .append(\"g\")\n      .attr(\"class\", \"lines\")\n      .attr(\"transform\", `translate(${margin.left})`);\n\n    // create x-axis\n    svg\n      .append(\"g\")\n      .attr(\"class\", \"x-axis\")\n      .attr(\"transform\", `translate(${margin.left}, ${height})`);\n\n    // create y-axis\n    svg\n      .append(\"g\")\n      .attr(\"class\", \"y-axis\")\n      .attr(\"transform\", `translate(${margin.left})`);\n  }, []);\n\n  useEffect(() => {\n    draw();\n  }, [data, draw, ref.current]);\n\n  return (\n    <div style={{ padding: \"10px 0\" }}>\n      <svg ref={ref}></svg>\n    </div>\n  );\n}\n\nexport default LineChart;\n","import { useState } from 'react';\n\n// https://www.d3-graph-gallery.com/graph/barplot_stacked_basicWide.html\n\nconst Graph = ({ componentProp, getData }) => {\n  const [data, setData] = useState(getData());\n  const GraphComponent = componentProp;\n\n  return (\n    <div>\n      <div>\n        <button onClick={() => setData(getData())}>Update Data</button>\n      </div>\n\n      <GraphComponent data={data} />\n    </div>\n  );\n};\n\nexport default Graph;\n","import StackedBarChart from \"./StackedBarChart\";\nimport SingleBarChart from \"./SingleBarChart\";\nimport ScatterChart from \"./ScatterChart\";\nimport LineChart from \"./LineChart\";\nimport { getSingleData, getData, getScatterData, getLineData } from \"./data\";\nimport Graph from \"./Graph\";\n\n// https://www.d3-graph-gallery.com/graph/barplot_stacked_basicWide.html\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Graph componentProp={LineChart} getData={getLineData} />\n      <Graph componentProp={ScatterChart} getData={getScatterData} />\n      <Graph componentProp={StackedBarChart} getData={getData} />\n      <Graph componentProp={SingleBarChart} getData={getSingleData} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}