{"version":3,"sources":["StackedBarChart.js","SingleBarChart.js","ScatterChart.js","data.js","Graph.js","App.js","index.js"],"names":["margin","width","height","StackedBarChart","data","ref","useRef","groups","map","d","time","subgroups","Object","keys","slice","stackedData","d3","color","domain","range","xScale","padding","yScale","rangeRound","draw","useCallback","svg","current","select","call","selectAll","text","attr","values","transition","join","enter","g","append","key","updateBars","update","selection","bandwidth","style","duration","on","mouseover","mouseleave","subgroupName","this","parentNode","datum","useEffect","SingleBarChart","textTransform","_","i","exit","remove","onClick","sort","a","b","ScatterChart","x","y","r","e","delay","u","randomizer","max","min","Math","round","random","getData","maxSize","count","push","cat","dog","fish","cow","mouse","getSingleData","getScatterData","Graph","componentProp","useState","setData","GraphComponent","App","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7418852d.chunk.js","sourcesContent":["import * as d3 from \"d3\";\nimport React, { useRef, useEffect, useCallback } from \"react\";\n\nconst mainWidth = 1000;\nconst mainHeight = 400;\n\nconst margin = { top: 20, right: 30, bottom: 50, left: 50 };\nconst width = mainWidth - margin.left - margin.right;\nconst height = mainHeight - margin.top - margin.bottom;\n\nfunction StackedBarChart({ data }) {\n  const ref = useRef();\n\n  const groups = data.map((d) => d.time);\n  const subgroups = Object.keys(data[0]).slice(1);\n  const stackedData = d3.stack().keys(subgroups)(data);\n  const color = d3\n    .scaleOrdinal()\n    .domain(subgroups)\n    .range([\"pink\", \"magenta\", \"purple\", \"green\", \"lightblue\"]);\n\n  const xScale = d3.scaleBand().range([0, width]).padding([0.2]);\n  const yScale = d3.scaleLinear().rangeRound([height, 0]);\n\n  const draw = useCallback(() => {\n    const svg = d3.select(ref.current);\n\n    // update x-axis\n    xScale.domain(groups);\n    svg\n      .select(\".x-axis\")\n      .call(d3.axisBottom(xScale))\n      .selectAll(\"text\")\n      .text((d) => d.slice(11))\n      .attr(\"transform\", \"translate(-13,26) rotate(-90)\");\n\n    // update y-axis\n    yScale.domain([0, d3.max(data, (d) => d3.sum(Object.values(d))) * 1.2]);\n    svg.select(\".y-axis\").transition().call(d3.axisLeft(yScale));\n\n    svg\n      .selectAll(\"g.stacks\")\n      .selectAll(\"g.stack\")\n      .data(stackedData)\n      .join(\n        (enter) => {\n          const g = enter.append(\"g\").attr(\"class\", (d) => `stack ${d.key}`);\n\n          g.append(\"g\")\n            .attr(\"class\", \"bars\")\n            .attr(\"fill\", (d) => color(d.key));\n\n          updateBars(g.select(\".bars\"));\n\n          return g;\n        },\n        (update) => {\n          updateBars(update.select(\".bars\"));\n        }\n      );\n  }, [data]);\n\n  const updateBars = (selection) => {\n    selection\n      .selectAll(\"rect\")\n      .data((d) => d)\n      .join(\n        (enter) =>\n          enter\n            .append(\"rect\")\n            .attr(\"class\", \"bar\")\n            .attr(\"height\", (d) => yScale(d[0]) - yScale(d[1]))\n            .attr(\"width\", xScale.bandwidth())\n            .attr(\"x\", (d) => xScale(d.data.time))\n            .attr(\"y\", (d) => yScale(d[1]))\n            .attr(\"stroke\", \"grey\")\n            .style(\"opacity\", 0)\n            .call((enter) =>\n              enter.transition().duration(500).style(\"opacity\", 1)\n            )\n            .on(\"mouseover\", mouseover)\n            .on(\"mouseleave\", mouseleave),\n        (update) => {\n          update\n            .transition()\n            .attr(\"height\", (d) => yScale(d[0]) - yScale(d[1]))\n            .attr(\"width\", xScale.bandwidth())\n            .attr(\"x\", (d) => xScale(d.data.time))\n            .attr(\"y\", (d) => yScale(d[1]));\n        }\n      );\n  };\n\n  const mouseover = function () {\n    const subgroupName = d3.select(this.parentNode).datum().key;\n    d3.select(ref.current).selectAll(\".bar\").style(\"opacity\", 0.2);\n    d3.select(ref.current)\n      .selectAll(`.${subgroupName} rect`)\n      .style(\"opacity\", 1);\n  };\n\n  const mouseleave = function () {\n    d3.select(ref.current).selectAll(\".bar\").style(\"opacity\", 0.8);\n  };\n\n  // initialize graph\n  useEffect(() => {\n    const svg = d3.select(ref.current);\n    // create main viewport\n    svg\n      .attr(\"width\", mainWidth)\n      .attr(\"height\", mainHeight)\n      .append(\"g\")\n      .attr(\"class\", \"stacks\")\n      .attr(\"transform\", `translate(${margin.left})`);\n\n    // create x-axis\n    svg\n      .append(\"g\")\n      .attr(\"class\", \"x-axis\")\n      .attr(\"transform\", `translate(${margin.left}, ${height})`);\n\n    // create y-axis\n    svg\n      .append(\"g\")\n      .attr(\"class\", \"y-axis\")\n      .attr(\"transform\", `translate(${margin.left})`);\n  }, []);\n\n  useEffect(() => {\n    draw();\n  }, [data, draw, ref.current]);\n\n  return (\n    <div style={{ padding: \"10px 0\" }}>\n      <svg ref={ref}></svg>\n    </div>\n  );\n}\n\nexport default StackedBarChart;\n","import * as d3 from \"d3\";\nimport React, { useCallback, useRef, useEffect } from \"react\";\n\nconst mainWidth = 1000;\nconst mainHeight = 300;\n\nconst margin = { top: 20, right: 30, bottom: 50, left: 50 };\nconst width = mainWidth - margin.left - margin.right;\nconst height = mainHeight - margin.top - margin.bottom;\n\nfunction SingleBarChart({ data }) {\n  const ref = useRef();\n\n  const xScale = d3.scaleBand().range([0, width]).padding(0.3);\n  const yScale = d3.scaleLinear().range([height, 0]);\n\n  const sortAscending = () => {\n    data.sort((a, b) => d3.ascending(a, b));\n    draw();\n  };\n\n  const sortDesc = () => {\n    data.sort((a, b) => d3.descending(a, b));\n    draw();\n  };\n\n  const textTransform = (d) => {\n    return d > 10\n      ? `translate(${xScale.bandwidth() / 2}, 15)`\n      : `translate(${xScale.bandwidth() / 2}, -2)`;\n  };\n\n  const draw = useCallback(() => {\n    const svg = d3.select(ref.current);\n\n    xScale.domain(Object.keys(data));\n    svg\n      .select(\".x-axis\")\n      .call(d3.axisBottom(xScale))\n      .selectAll(\"text\")\n      .text((d) => +d + 1);\n\n    yScale.domain([0, d3.max(data) * 1.1]);\n    svg.select(\".y-axis\").transition().call(d3.axisLeft(yScale));\n\n    svg\n      .selectAll(\".bars\")\n      .selectAll(\".bar\")\n      .data(data)\n      .join(\n        (enter) => {\n          const g = enter.append(\"g\").attr(\"class\", \"bar\");\n\n          g.append(\"rect\")\n            .attr(\"x\", (_, i) => xScale(i))\n            .attr(\"y\", (d) => yScale(d))\n            .attr(\"height\", (d) => height - yScale(d))\n            .attr(\"width\", xScale.bandwidth())\n            .attr(\"stroke-width\", 1)\n            .attr(\"stroke\", \"black\")\n            .attr(\"fill\", \"pink\");\n\n          g.append(\"text\")\n            .text((d) => d)\n            .join(\"text\")\n            .attr(\"x\", (_, i) => xScale(i))\n            .attr(\"y\", (d) => yScale(d))\n            .attr(\"transform\", textTransform)\n            .attr(\"text-anchor\", \"middle\");\n\n          return g;\n        },\n        (update) => {\n          update\n            .select(\"rect\")\n            .transition()\n            .attr(\"x\", (_, i) => xScale(i))\n            .attr(\"y\", (d) => yScale(d))\n            .attr(\"height\", (d) => height - yScale(d))\n            .attr(\"width\", xScale.bandwidth());\n\n          update\n            .select(\"text\")\n            .transition()\n            .text((d) => d)\n            .attr(\"x\", (_, i) => xScale(i))\n            .attr(\"y\", (d) => yScale(d))\n            .attr(\"transform\", textTransform);\n        },\n        (exit) => {\n          exit.select(\"text\").remove();\n          exit.select(\"rect\").transition().style(\"opacity\", 0);\n          exit.transition().remove();\n        }\n      );\n  }, [data, height, width]);\n\n  useEffect(() => {\n    const svg = d3.select(ref.current);\n\n    // create viewport\n    svg\n      .attr(\"width\", mainWidth)\n      .attr(\"height\", mainHeight)\n      .append(\"g\")\n      .attr(\"class\", \"bars\")\n      .attr(\"transform\", `translate(${margin.left})`);\n\n    // create x-axis\n    svg\n      .append(\"g\")\n      .attr(\"class\", \"x-axis\")\n      .attr(\"transform\", `translate(${margin.left}, ${height})`);\n\n    // create y-axis\n    svg\n      .append(\"g\")\n      .attr(\"class\", \"y-axis\")\n      .attr(\"transform\", `translate(${margin.left})`);\n  }, []);\n\n  useEffect(() => {\n    draw();\n  }, [data, draw, ref.current]);\n\n  return (\n    <div>\n      <div>\n        <button onClick={sortAscending}>asc</button>\n        <button onClick={sortDesc}>desc</button>\n      </div>\n      <div style={{ padding: \"10px 0\" }}>\n        <svg ref={ref}></svg>\n      </div>\n    </div>\n  );\n}\n\nexport default SingleBarChart;\n","import * as d3 from \"d3\";\nimport React, { useRef, useEffect, useCallback } from \"react\";\n\nconst mainWidth = 1000;\nconst mainHeight = 400;\n\nconst margin = { top: 20, right: 30, bottom: 50, left: 50 };\nconst width = mainWidth - margin.left - margin.right;\nconst height = mainHeight - margin.top - margin.bottom;\n\nfunction ScatterChart({ data }) {\n  const ref = useRef();\n\n  const xScale = d3.scaleLinear().range([0, width]);\n  const yScale = d3.scaleLinear().rangeRound([height, 0]);\n\n  const draw = useCallback(() => {\n    const svg = d3.select(ref.current);\n\n    // update x-axis\n    xScale.domain([0, d3.max(data, (d) => d.x) * 1.2]);\n    svg.select(\".x-axis\").call(d3.axisBottom(xScale));\n\n    // update y-axis\n    yScale.domain([0, d3.max(data, (d) => d.y) * 1.2]);\n    svg.select(\".y-axis\").transition().call(d3.axisLeft(yScale));\n\n    svg\n      .selectAll(\".scatter\")\n      .selectAll(\"circle\")\n      .data(data)\n      .join(\n        (enter) => {\n          enter\n            .append(\"circle\")\n            .attr(\"fill\", \"red\")\n            .attr(\"cx\", (d) => xScale(d.x))\n            .attr(\"cy\", (d) => yScale(d.y))\n            .attr(\"r\", (d) => d.r)\n            .call((e) => e.transition().attr(\"fill\", \"orange\"));\n          return enter;\n        },\n        (update) => {\n          update\n            .transition()\n            .delay((_, i) => i * 50)\n            .duration(500)\n            .attr(\"fill\", \"none\")\n            .attr(\"stroke\", \"blue\")\n            .attr(\"cx\", (d) => xScale(d.x))\n            .attr(\"cy\", (d) => yScale(d.y))\n            .call((u) =>\n              u\n                .transition()\n                .duration(500)\n                .attr(\"stroke\", \"none\")\n                .attr(\"fill\", \"orange\")\n            );\n        },\n        (exit) =>\n          exit\n            .transition()\n            .duration(1000)\n            .attr(\"fill\", \"yellow\")\n            .attr(\"stroke-width\", 4)\n            .attr(\"stroke\", \"black\")\n            .call((exit) => exit.style(\"opacity\", 0).remove())\n      );\n  }, [data]);\n\n  // initialize graph\n  useEffect(() => {\n    const svg = d3.select(ref.current);\n    // create main viewport\n    svg\n      .attr(\"width\", mainWidth)\n      .attr(\"height\", mainHeight)\n      .append(\"g\")\n      .attr(\"class\", \"scatter\")\n      .attr(\"transform\", `translate(${margin.left})`);\n\n    // create x-axis\n    svg\n      .append(\"g\")\n      .attr(\"class\", \"x-axis\")\n      .attr(\"transform\", `translate(${margin.left}, ${height})`);\n\n    // create y-axis\n    svg\n      .append(\"g\")\n      .attr(\"class\", \"y-axis\")\n      .attr(\"transform\", `translate(${margin.left})`);\n  }, []);\n\n  useEffect(() => {\n    draw();\n  }, [data, draw, ref.current]);\n\n  return (\n    <div style={{ padding: \"10px 0\" }}>\n      <svg ref={ref}></svg>\n    </div>\n  );\n}\n\nexport default ScatterChart;\n","function randomizer(max = 1, min = 0) {\n  return Math.round(Math.random() * (max - min) + min);\n}\n\nexport const getData = (maxSize = 100) => {\n  const data = [];\n  const count = randomizer(25, 10);\n  for (let i = 0; i < count; i++) {\n    data.push({\n      time: `2021-05-05 10:00:0${i}`,\n      cat: randomizer(maxSize),\n      dog: randomizer(maxSize),\n      fish: randomizer(maxSize),\n      cow: randomizer(maxSize),\n      mouse: randomizer(maxSize),\n    });\n  }\n  return data;\n};\n\nexport const getSingleData = () => {\n  const data = [];\n  const count = randomizer(25, 10);\n  for (let i = 0; i < count; i++) {\n    data.push(randomizer(100, 1));\n  }\n  return data;\n};\n\nexport const getScatterData = () => {\n  const data = [];\n  const count = randomizer(50, 10);\n  for (let i = 0; i < count; i++) {\n    data.push({\n      x: randomizer(100, 1),\n      y: randomizer(100, 1),\n      r: randomizer(10, 1),\n    });\n  }\n  return data;\n};\n","import { useState } from 'react';\n\n// https://www.d3-graph-gallery.com/graph/barplot_stacked_basicWide.html\n\nconst Graph = ({ componentProp, getData }) => {\n  const [data, setData] = useState(getData());\n  const GraphComponent = componentProp;\n\n  return (\n    <div>\n      <div>\n        <button onClick={() => setData(getData())}>Update Data</button>\n      </div>\n\n      <GraphComponent data={data} />\n    </div>\n  );\n};\n\nexport default Graph;\n","import StackedBarChart from \"./StackedBarChart\";\nimport SingleBarChart from \"./SingleBarChart\";\nimport ScatterChart from \"./ScatterChart\";\nimport { getSingleData, getData, getScatterData } from \"./data\";\nimport Graph from \"./Graph\";\n\n// https://www.d3-graph-gallery.com/graph/barplot_stacked_basicWide.html\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Graph componentProp={ScatterChart} getData={getScatterData} />\n      <Graph componentProp={StackedBarChart} getData={getData} />\n      <Graph componentProp={SingleBarChart} getData={getSingleData} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}