{"version":3,"sources":["data.js","StackedBarChart.js","SingleBarChart.js","ScatterChart.js","LineChart.js","Graph.js","App.js","index.js"],"names":["randomizer","max","min","Math","round","random","animals","dataColors","getData","maxSize","data","count","i","push","time","cat","dog","fish","cow","mouse","getSingleData","getLineData","map","animal","d","last","next","x","y","getScatterData","r","type","length","margin","width","height","StackedBarChart","ref","useRef","groups","subgroups","Object","keys","slice","stackedData","d3","color","domain","range","xScale","padding","yScale","rangeRound","draw","useCallback","svg","current","select","call","selectAll","text","attr","values","transition","join","enter","g","append","key","updateBars","update","selection","bandwidth","style","duration","on","mouseover","mouseleave","subgroupName","this","parentNode","datum","useEffect","SingleBarChart","textTransform","_","exit","remove","onClick","sort","a","b","ScatterChart","e","target","__data__","delay","u","LineChart","flat","dPath","Graph","componentProp","useState","setData","GraphComponent","newData","App","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fa5cbd33.chunk.js","sourcesContent":["function randomizer(max = 1, min = 0) {\n  return Math.round(Math.random() * (max - min) + min);\n}\nexport const animals = [\"cat\", \"dog\", \"fish\", \"cow\", \"mouse\"];\nexport const dataColors = [\"pink\", \"magenta\", \"purple\", \"green\", \"lightblue\"];\nexport const getData = (maxSize = 100) => {\n  const data = [];\n  const count = randomizer(25, 10);\n  for (let i = 0; i < count; i++) {\n    data.push({\n      time: `2021-05-05 10:00:0${i}`,\n      cat: randomizer(maxSize),\n      dog: randomizer(maxSize),\n      fish: randomizer(maxSize),\n      cow: randomizer(maxSize),\n      mouse: randomizer(maxSize),\n    });\n  }\n  return data;\n};\n\nexport const getSingleData = () => {\n  const data = [];\n  const count = randomizer(25, 10);\n  for (let i = 0; i < count; i++) {\n    data.push(randomizer(100, 1));\n  }\n  return data;\n};\n\nexport const getLineData = () => {\n  const count = 5 * 1000;\n  const data = animals.map((animal) => {\n    const d = [];\n    let last = randomizer(100, 1);\n    for (let i = 0; i < count; i++) {\n      const next = last + randomizer(1, -1);\n      d.push({ x: i, y: next });\n      last = next;\n    }\n    return [animal, d];\n  });\n\n  return data;\n};\n\nexport const getScatterData = () => {\n  const data = [];\n  const count = randomizer(50, 10);\n  for (let i = 0; i < count; i++) {\n    data.push({\n      x: randomizer(100, 5),\n      y: randomizer(100, 10),\n      r: randomizer(20, 10),\n      type: animals[i % animals.length],\n    });\n  }\n  return data;\n};\n","import * as d3 from \"d3\";\nimport React, { useRef, useEffect, useCallback } from \"react\";\nimport { dataColors } from \"./data\";\n\nconst mainWidth = 1000;\nconst mainHeight = 400;\n\nconst margin = { top: 20, right: 30, bottom: 50, left: 50 };\nconst width = mainWidth - margin.left - margin.right;\nconst height = mainHeight - margin.top - margin.bottom;\n\nfunction StackedBarChart({ data }) {\n  const ref = useRef();\n\n  const groups = data.map((d) => d.time);\n  const subgroups = Object.keys(data[0]).slice(1);\n  const stackedData = d3.stack().keys(subgroups)(data);\n  const color = d3.scaleOrdinal().domain(subgroups).range(dataColors);\n\n  const xScale = d3.scaleBand().range([0, width]).padding([0.2]);\n  const yScale = d3.scaleLinear().rangeRound([height, 0]);\n\n  const draw = useCallback(() => {\n    const svg = d3.select(ref.current);\n\n    // update x-axis\n    xScale.domain(groups);\n    svg\n      .select(\".x-axis\")\n      .call(d3.axisBottom(xScale))\n      .selectAll(\"text\")\n      .text((d) => d.slice(11))\n      .attr(\"transform\", \"translate(-13,26) rotate(-90)\");\n\n    // update y-axis\n    yScale.domain([0, d3.max(data, (d) => d3.sum(Object.values(d))) * 1.2]);\n    svg.select(\".y-axis\").transition().call(d3.axisLeft(yScale));\n\n    svg\n      .selectAll(\"g.stacks\")\n      .selectAll(\"g.stack\")\n      .data(stackedData)\n      .join(\n        (enter) => {\n          const g = enter.append(\"g\").attr(\"class\", (d) => `stack ${d.key}`);\n\n          g.append(\"g\")\n            .attr(\"class\", \"bars\")\n            .attr(\"fill\", (d) => color(d.key));\n\n          updateBars(g.select(\".bars\"));\n\n          return g;\n        },\n        (update) => {\n          updateBars(update.select(\".bars\"));\n        }\n      );\n  }, [data]);\n\n  const updateBars = (selection) => {\n    selection\n      .selectAll(\"rect\")\n      .data((d) => d)\n      .join(\n        (enter) =>\n          enter\n            .append(\"rect\")\n            .attr(\"class\", \"bar\")\n            .attr(\"height\", (d) => yScale(d[0]) - yScale(d[1]))\n            .attr(\"width\", xScale.bandwidth())\n            .attr(\"x\", (d) => xScale(d.data.time))\n            .attr(\"y\", (d) => yScale(d[1]))\n            .attr(\"stroke\", \"grey\")\n            .style(\"opacity\", 0)\n            .call((enter) =>\n              enter.transition().duration(500).style(\"opacity\", 1)\n            )\n            .on(\"mouseover\", mouseover)\n            .on(\"mouseleave\", mouseleave),\n        (update) => {\n          update\n            .transition()\n            .attr(\"height\", (d) => yScale(d[0]) - yScale(d[1]))\n            .attr(\"width\", xScale.bandwidth())\n            .attr(\"x\", (d) => xScale(d.data.time))\n            .attr(\"y\", (d) => yScale(d[1]));\n        }\n      );\n  };\n\n  const mouseover = function () {\n    const subgroupName = d3.select(this.parentNode).datum().key;\n    d3.select(ref.current).selectAll(\".bar\").style(\"opacity\", 0.2);\n    d3.select(ref.current)\n      .selectAll(`.${subgroupName} rect`)\n      .style(\"opacity\", 1);\n  };\n\n  const mouseleave = function () {\n    d3.select(ref.current).selectAll(\".bar\").style(\"opacity\", 0.8);\n  };\n\n  // initialize graph\n  useEffect(() => {\n    const svg = d3.select(ref.current);\n    // create main viewport\n    svg\n      .attr(\"width\", mainWidth)\n      .attr(\"height\", mainHeight)\n      .append(\"g\")\n      .attr(\"class\", \"stacks\")\n      .attr(\"transform\", `translate(${margin.left})`);\n\n    // create x-axis\n    svg\n      .append(\"g\")\n      .attr(\"class\", \"x-axis\")\n      .attr(\"transform\", `translate(${margin.left}, ${height})`);\n\n    // create y-axis\n    svg\n      .append(\"g\")\n      .attr(\"class\", \"y-axis\")\n      .attr(\"transform\", `translate(${margin.left})`);\n  }, []);\n\n  useEffect(() => {\n    draw();\n  }, [data, draw, ref.current]);\n\n  return (\n    <div style={{ padding: \"10px 0\" }}>\n      <svg ref={ref}></svg>\n    </div>\n  );\n}\n\nexport default StackedBarChart;\n","import * as d3 from \"d3\";\nimport React, { useCallback, useRef, useEffect } from \"react\";\n\nconst mainWidth = 1000;\nconst mainHeight = 300;\n\nconst margin = { top: 20, right: 30, bottom: 50, left: 50 };\nconst width = mainWidth - margin.left - margin.right;\nconst height = mainHeight - margin.top - margin.bottom;\n\nfunction SingleBarChart({ data }) {\n  const ref = useRef();\n\n  const xScale = d3.scaleBand().range([0, width]).padding(0.3);\n  const yScale = d3.scaleLinear().range([height, 0]);\n\n  const sortAscending = () => {\n    data.sort((a, b) => d3.ascending(a, b));\n    draw();\n  };\n\n  const sortDesc = () => {\n    data.sort((a, b) => d3.descending(a, b));\n    draw();\n  };\n\n  const textTransform = (d) => {\n    return d > 10\n      ? `translate(${xScale.bandwidth() / 2}, 15)`\n      : `translate(${xScale.bandwidth() / 2}, -2)`;\n  };\n\n  const draw = useCallback(() => {\n    const svg = d3.select(ref.current);\n\n    xScale.domain(Object.keys(data));\n    svg\n      .select(\".x-axis\")\n      .call(d3.axisBottom(xScale))\n      .selectAll(\"text\")\n      .text((d) => +d + 1);\n\n    yScale.domain([0, d3.max(data) * 1.1]);\n    svg.select(\".y-axis\").transition().call(d3.axisLeft(yScale));\n\n    svg\n      .selectAll(\".bars\")\n      .selectAll(\".bar\")\n      .data(data)\n      .join(\n        (enter) => {\n          const g = enter.append(\"g\").attr(\"class\", \"bar\");\n\n          g.append(\"rect\")\n            .attr(\"x\", (_, i) => xScale(i))\n            .attr(\"y\", (d) => yScale(d))\n            .attr(\"height\", (d) => height - yScale(d))\n            .attr(\"width\", xScale.bandwidth())\n            .attr(\"stroke-width\", 1)\n            .attr(\"stroke\", \"black\")\n            .attr(\"fill\", \"pink\");\n\n          g.append(\"text\")\n            .text((d) => d)\n            .join(\"text\")\n            .attr(\"x\", (_, i) => xScale(i))\n            .attr(\"y\", (d) => yScale(d))\n            .attr(\"transform\", textTransform)\n            .attr(\"text-anchor\", \"middle\");\n\n          return g;\n        },\n        (update) => {\n          update\n            .select(\"rect\")\n            .transition()\n            .attr(\"x\", (_, i) => xScale(i))\n            .attr(\"y\", (d) => yScale(d))\n            .attr(\"height\", (d) => height - yScale(d))\n            .attr(\"width\", xScale.bandwidth());\n\n          update\n            .select(\"text\")\n            .transition()\n            .text((d) => d)\n            .attr(\"x\", (_, i) => xScale(i))\n            .attr(\"y\", (d) => yScale(d))\n            .attr(\"transform\", textTransform);\n        },\n        (exit) => {\n          exit.select(\"text\").remove();\n          exit.select(\"rect\").transition().style(\"opacity\", 0);\n          exit.transition().remove();\n        }\n      );\n  }, [data, height, width]);\n\n  useEffect(() => {\n    const svg = d3.select(ref.current);\n\n    // create viewport\n    svg\n      .attr(\"width\", mainWidth)\n      .attr(\"height\", mainHeight)\n      .append(\"g\")\n      .attr(\"class\", \"bars\")\n      .attr(\"transform\", `translate(${margin.left})`);\n\n    // create x-axis\n    svg\n      .append(\"g\")\n      .attr(\"class\", \"x-axis\")\n      .attr(\"transform\", `translate(${margin.left}, ${height})`);\n\n    // create y-axis\n    svg\n      .append(\"g\")\n      .attr(\"class\", \"y-axis\")\n      .attr(\"transform\", `translate(${margin.left})`);\n  }, []);\n\n  useEffect(() => {\n    draw();\n  }, [data, draw, ref.current]);\n\n  return (\n    <div>\n      <div>\n        <button onClick={sortAscending}>asc</button>\n        <button onClick={sortDesc}>desc</button>\n      </div>\n      <div style={{ padding: \"10px 0\" }}>\n        <svg ref={ref}></svg>\n      </div>\n    </div>\n  );\n}\n\nexport default SingleBarChart;\n","import * as d3 from \"d3\";\nimport React, { useRef, useEffect, useCallback } from \"react\";\nimport { dataColors } from \"./data\";\n\nconst mainWidth = 1000;\nconst mainHeight = 400;\n\nconst margin = { top: 20, right: 30, bottom: 50, left: 50 };\nconst width = mainWidth - margin.left - margin.right;\nconst height = mainHeight - margin.top - margin.bottom;\n\nfunction ScatterChart({ data }) {\n  const ref = useRef();\n\n  const xScale = d3.scaleLinear().range([0, width]);\n  const yScale = d3.scaleLinear().rangeRound([height, 0]);\n  const color = d3\n    .scaleOrdinal()\n    .domain(data.map((d) => d.type))\n    .range(dataColors);\n\n  const draw = useCallback(() => {\n    const svg = d3.select(ref.current);\n\n    // update x-axis\n    xScale.domain([0, d3.max(data, (d) => d.x)]);\n    svg.select(\".x-axis\").call(d3.axisBottom(xScale));\n\n    // update y-axis\n    yScale.domain([0, d3.max(data, (d) => d.y) * 1.2]);\n    svg.select(\".y-axis\").transition().call(d3.axisLeft(yScale));\n\n    svg\n      .selectAll(\".scatter\")\n      .selectAll(\"circle\")\n      .data(data)\n      .join(\n        (enter) => {\n          enter\n            .append(\"circle\")\n            .attr(\"fill\", \"red\")\n            .attr(\"stroke\", \"white\")\n            .attr(\"cx\", (d) => xScale(d.x))\n            .attr(\"cy\", (d) => yScale(d.y))\n            .attr(\"r\", (d) => d.r)\n            .call((e) => e.transition().attr(\"fill\", (d) => color(d.type)))\n            .on(\"mouseover\", (e) => {\n              d3.select(e.target)\n                .transition()\n                .style(\"opacity\", 0.8)\n                .attr(\"r\", 25);\n            })\n            .on(\"mouseleave\", (e) => {\n              const data = e.target.__data__;\n              d3.select(e.target)\n                .transition()\n                .attr(\"fill\", color(data.type))\n                .attr(\"r\", data.r);\n            });\n          return enter;\n        },\n        (update) => {\n          update\n            .transition()\n            .delay((_, i) => i * 50)\n            .duration(500)\n            .attr(\"fill\", \"none\")\n            .attr(\"stroke\", \"blue\")\n            .attr(\"cx\", (d) => xScale(d.x))\n            .attr(\"cy\", (d) => yScale(d.y))\n            .call((u) =>\n              u\n                .transition()\n                .duration(500)\n                .attr(\"stroke\", \"white\")\n                .attr(\"fill\", (d) => color(d.type))\n            );\n        },\n        (exit) =>\n          exit\n            .transition()\n            .duration(1000)\n            .attr(\"fill\", \"yellow\")\n            .attr(\"stroke-width\", 4)\n            .attr(\"stroke\", \"black\")\n            .call((exit) => exit.style(\"opacity\", 0).remove())\n      );\n  }, [data]);\n\n  // initialize graph\n  useEffect(() => {\n    const svg = d3.select(ref.current);\n    // create main viewport\n    svg\n      .attr(\"width\", mainWidth)\n      .attr(\"height\", mainHeight)\n      .append(\"g\")\n      .attr(\"class\", \"scatter\")\n      .attr(\"transform\", `translate(${margin.left})`);\n\n    // create x-axis\n    svg\n      .append(\"g\")\n      .attr(\"class\", \"x-axis\")\n      .attr(\"transform\", `translate(${margin.left}, ${height})`);\n\n    // create y-axis\n    svg\n      .append(\"g\")\n      .attr(\"class\", \"y-axis\")\n      .attr(\"transform\", `translate(${margin.left})`);\n  }, []);\n\n  useEffect(() => {\n    draw();\n  }, [data, draw, ref.current]);\n\n  return (\n    <div style={{ padding: \"10px 0\" }}>\n      <svg ref={ref}></svg>\n    </div>\n  );\n}\n\nexport default ScatterChart;\n","import * as d3 from \"d3\";\nimport React, { useRef, useEffect, useCallback } from \"react\";\nimport { animals, dataColors } from \"./data\";\n\nconst mainWidth = 1000;\nconst mainHeight = 400;\n\nconst margin = { top: 20, right: 30, bottom: 50, left: 50 };\nconst width = mainWidth - margin.left - margin.right;\nconst height = mainHeight - margin.top - margin.bottom;\n\nfunction LineChart({ data }) {\n  const ref = useRef();\n\n  const xScale = d3.scaleLinear().range([0, width]);\n  const yScale = d3.scaleLinear().rangeRound([height, 0]);\n  const color = d3.scaleOrdinal().domain(animals).range(dataColors);\n\n  const draw = useCallback(() => {\n    const svg = d3.select(ref.current);\n\n    // update x-axis\n    xScale.domain([0, d3.max(data, (d) => d3.max(d[1], (d) => d.x))]);\n    svg.select(\".x-axis\").call(d3.axisBottom(xScale));\n\n    // update y-axis\n    yScale.domain(d3.extent(data.map(([_, d]) => d).flat(), (d) => d.y));\n    svg.select(\".y-axis\").transition().call(d3.axisLeft(yScale));\n\n    svg\n      .selectAll(\".lines\")\n      .selectAll(\".line\")\n      .data(data, (d) => d[0]) // <---- wrap data in array!!!!\n      .join(\n        (enter) => {\n          const line = enter.append(\"g\").attr(\"class\", \"line\");\n\n          return line\n            .append(\"path\")\n            .attr(\"fill\", \"none\")\n            .attr(\"stroke-width\", 2)\n            .attr(\"stroke\", (d) => color(d[0]))\n            .attr(\"d\", (dPath) => {\n              return d3\n                .line()\n                .x((d) => xScale(d.x))\n                .y((d) => yScale(d.y))(dPath[1]);\n            });\n        },\n        (update) => {\n          update\n            .select(\"path\")\n            .transition()\n            .attr(\"fill\", \"none\")\n            .attr(\"stroke-width\", 2)\n            .attr(\"stroke\", (d) => color(d[0]))\n            .attr(\"d\", (dPath) => {\n              return d3\n                .line()\n                .x((d) => xScale(d.x))\n                .y((d) => yScale(d.y))(dPath[1]);\n            });\n        }\n      );\n  }, [data, xScale, yScale]);\n\n  // initialize graph\n  useEffect(() => {\n    const svg = d3.select(ref.current);\n    // create main viewport\n    svg\n      .attr(\"width\", mainWidth)\n      .attr(\"height\", mainHeight)\n      .append(\"g\")\n      .attr(\"class\", \"lines\")\n      .attr(\"transform\", `translate(${margin.left})`);\n\n    // create x-axis\n    svg\n      .append(\"g\")\n      .attr(\"class\", \"x-axis\")\n      .attr(\"transform\", `translate(${margin.left}, ${height})`);\n\n    // create y-axis\n    svg\n      .append(\"g\")\n      .attr(\"class\", \"y-axis\")\n      .attr(\"transform\", `translate(${margin.left})`);\n  }, []);\n\n  useEffect(() => {\n    draw();\n  }, [data, draw]);\n\n  return (\n    <div style={{ padding: \"10px 0\" }}>\n      <svg ref={ref}></svg>\n    </div>\n  );\n}\n\nexport default LineChart;\n","import { useState } from \"react\";\n\n// https://www.d3-graph-gallery.com/graph/barplot_stacked_basicWide.html\n\nconst Graph = ({ componentProp, getData }) => {\n  const [data, setData] = useState(getData());\n  const GraphComponent = componentProp;\n\n  return (\n    <div>\n      <div>\n        <button\n          onClick={() => {\n            const newData = getData();\n            setData(newData);\n          }}\n        >\n          Update Data\n        </button>\n      </div>\n\n      <GraphComponent data={data} />\n    </div>\n  );\n};\n\nexport default Graph;\n","import StackedBarChart from \"./StackedBarChart\";\nimport SingleBarChart from \"./SingleBarChart\";\nimport ScatterChart from \"./ScatterChart\";\nimport LineChart from \"./LineChart\";\nimport { getSingleData, getData, getScatterData, getLineData } from \"./data\";\nimport Graph from \"./Graph\";\n\n// https://www.d3-graph-gallery.com/graph/barplot_stacked_basicWide.html\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Graph componentProp={LineChart} getData={getLineData} />\n      <Graph componentProp={ScatterChart} getData={getScatterData} />\n      <Graph componentProp={StackedBarChart} getData={getData} />\n      <Graph componentProp={SingleBarChart} getData={getSingleData} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}