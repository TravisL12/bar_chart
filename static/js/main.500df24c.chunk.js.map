{"version":3,"sources":["StackedBarChart.js","SingleBarChart.js","data.js","Graph.js","App.js","index.js"],"names":["margin","width","height","StackedBarChart","data","ref","useRef","groups","map","d","time","subgroups","Object","keys","slice","stackedData","d3","color","domain","range","xAxis","padding","yAxis","updateBars","selection","selectAll","join","enter","append","attr","bandwidth","update","transition","draw","useCallback","svg","current","select","call","text","g","key","useEffect","SingleBarChart","Math","max","apply","length","xScale","yScale","_","i","randomizer","min","round","random","getData","maxSize","count","push","cat","dog","fish","getSingleData","Graph","componentProp","useState","setData","GraphComponent","onClick","App","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MAMMA,EAAgB,GAAhBA,EAA2B,GAA3BA,EAAuC,GAAvCA,EAAiD,GACjDC,EAJY,IAIQD,EAAcA,EAClCE,EAJa,IAISF,EAAaA,EA6G1BG,MA3Gf,YAAoC,IAATC,EAAQ,EAARA,KACnBC,EAAMC,mBAENC,EAASH,EAAKI,KAAI,SAACC,GAAD,OAAOA,EAAEC,QAC3BC,EAAYC,OAAOC,KAAKT,EAAK,IAAIU,MAAM,GACvCC,EAAcC,MAAWH,KAAKF,EAAhBK,CAA2BZ,GACzCa,EAAQD,MAEXE,OAAOP,GACPQ,MAAM,CAAC,OAAQ,UAAW,WAEvBC,EAAQJ,MAAeE,OAAOX,GAAQY,MAAM,CAAC,EAAGlB,IAAQoB,QAAQ,CAAC,KACjEC,EAAQN,MAAiBE,OAAO,CAAC,EAAG,KAAKC,MAAM,CAACjB,EAAQ,IAExDqB,EAAa,SAACC,GAClBA,EACGC,UAAU,QACVrB,MACC,SAACK,GAAD,OAAOA,KACP,SAACA,GAAD,OAAOA,EAAEL,KAAKM,QAEfgB,MACC,SAACC,GAAD,OACEA,EACGC,OAAO,QACPC,KAAK,QAAS,OACdA,KAAK,KAAK,SAACpB,GAAD,OAAOW,EAAMX,EAAEL,KAAKM,SAC9BmB,KAAK,YAJR,oBAIkC7B,EAJlC,MAKG6B,KAAK,KAAK,SAACpB,GAAD,OAAOa,EAAMb,EAAE,OACzBoB,KAAK,UAAU,SAACpB,GAAD,OAAOa,EAAMb,EAAE,IAAMa,EAAMb,EAAE,OAC5CoB,KAAK,QAAST,EAAMU,gBACzB,SAACC,GACCA,EACGC,aACAH,KAAK,KAAK,SAACpB,GAAD,OAAOa,EAAMb,EAAE,OACzBoB,KAAK,UAAU,SAACpB,GAAD,OAAOa,EAAMb,EAAE,IAAMa,EAAMb,EAAE,WAKjDwB,EAAOC,uBAAY,WACvB,IAAMC,EAAMnB,IAAUX,EAAI+B,SAG1BD,EACGE,OAAO,WACPC,KAAKtB,IAAcI,IACnBK,UAAU,QACVc,MAAK,SAAC9B,GAAD,OAAOA,EAAEK,MAAM,OACpBe,KAAK,YAAa,iCAGrBM,EACGE,OAAO,WACPR,KAAK,YAFR,oBAEkC7B,EAFlC,MAGGsC,KAAKtB,IAAYM,IAEpBa,EACGV,UAAU,YACVA,UAAU,WACVrB,KAAKW,GACLW,MACC,SAACC,GACC,IAAMa,EAAIb,EAAMC,OAAO,KAAKC,KAAK,QAAS,SAO1C,OANAW,EAAEZ,OAAO,KACNC,KAAK,QAAS,QACdA,KAAK,QAAQ,SAACpB,GAAD,OAAOQ,EAAMR,EAAEgC,QAE/BlB,EAAWiB,EAAEH,OAAO,UAEbG,KAET,SAACT,GACCR,EAAWQ,EAAOM,OAAO,eAG9B,CAACjC,IA4BJ,OA1BAsC,qBAAU,WACRT,MACC,CAAC7B,EAAM6B,IAGVS,qBAAU,WACR,IAAMP,EAAMnB,IAAUX,EAAI+B,SAE1BD,EACGN,KAAK,QAAS5B,EAAQD,EAAcA,GACpC6B,KAAK,SAAU3B,EAASF,EAAaA,GACrC4B,OAAO,KACPC,KAAK,QAAS,UAGjBM,EACGP,OAAO,KACPC,KAAK,QAAS,UACdA,KAAK,YAHR,oBAGkC7B,EAHlC,aAGkDE,EAHlD,MAMAiC,EAAIP,OAAO,KAAKC,KAAK,QAAS,UAE9BI,MACC,IAEI,qBAAK5B,IAAKA,KC1CJsC,MAnEf,YAAmC,IAATvC,EAAQ,EAARA,KAClBC,EAAMC,mBACNJ,EAAS0C,KAAKC,IAAID,KAAKC,IAAIC,MAAM,KAAM1C,GAAO,KAC9CH,EALU,GAKUG,EAAK2C,OAAS,IAElCd,EAAOC,uBAAY,WACvB,IAAMC,EAAMnB,IAAUX,EAAI+B,SACpBY,EAAShC,MAEZE,OAAON,OAAOC,KAAKT,IACnBe,MAAM,CAAC,EAAGlB,IACVoB,QAAQ,IAEL4B,EAASjC,MAAiBE,OAAO,CAAC,EAAGhB,IAASiB,MAAM,CAACjB,EAAQ,IACnEiC,EACGV,UAAU,KACVrB,KAAKA,GACLsB,MACC,SAACC,GACC,IAAMa,EAAIb,EAAMC,OAAO,KAmBvB,OAjBAY,EAAEZ,OAAO,QACNC,KAAK,KAAK,SAACqB,EAAGC,GAAJ,OAAUH,EAAOG,MAC3BtB,KAAK,KAAK,SAACpB,GAAD,OAAOwC,EAAOxC,MACxBoB,KAAK,UAAU,SAACpB,GAAD,OAAOA,KACtBoB,KAAK,QA3BA,IA4BLA,KAAK,eAAgB,GACrBA,KAAK,SAAU,QACfA,KAAK,OAAQ,QAEhBW,EAAEZ,OAAO,QACNW,MAAK,SAAC9B,GAAD,OAAOA,KACZiB,KAAK,QACLG,KAAK,KAAK,SAACqB,EAAGC,GAAJ,OAAUH,EAAOG,MAC3BtB,KAAK,KAAK,SAACpB,GAAD,OAAOwC,EAAOxC,MACxBoB,KAAK,QArCA,IAsCLA,KAAK,oBAAqB,WAEtBW,KAET,SAACT,GACCA,EACGM,OAAO,QACPL,aACAH,KAAK,KAAK,SAACpB,GAAD,OAAOwC,EAAOxC,MACxBoB,KAAK,UAAU,SAACpB,GAAD,OAAOA,KACzBsB,EACGM,OAAO,QACPL,aACAO,MAAK,SAAC9B,GAAD,OAAOA,KACZoB,KAAK,KAAK,SAACpB,GAAD,OAAOwC,EAAOxC,WAGhC,CAACL,EAAMF,EAAQD,IAWlB,OATAyC,qBAAU,WACR1B,IAAUX,EAAI+B,SAASP,KAAK,QAAS5B,GAAO4B,KAAK,SAAU3B,KAC1D,IAEHwC,qBAAU,WAER,OADAT,IACO,eACN,CAAC7B,EAAM6B,IAEH,qBAAK5B,IAAKA,KCrEnB,SAAS+C,IAA8B,IAAnBP,EAAkB,uDAAZ,EAAGQ,EAAS,uDAAH,EACjC,OAAOT,KAAKU,MAAMV,KAAKW,UAAYV,EAAMQ,GAAOA,GAG3C,IAAMG,EAAU,WAErB,IAFoD,IAA9BC,EAA6B,uDAAnB,GAAIC,EAAe,uDAAP,GACtCtD,EAAO,GACJ+C,EAAI,EAAGA,EAAIO,EAAOP,IACzB/C,EAAKuD,KAAK,CACRjD,KAAK,qBAAD,OAAuByC,GAC3BS,IAAKR,EAAWK,GAChBI,IAAKT,EAAWK,GAChBK,KAAMV,EAAWK,KAGrB,OAAOrD,GAGI2D,EAAgB,WAE3B,IAF4C,IAAhBL,EAAe,uDAAP,GAC9BtD,EAAO,GACJ+C,EAAI,EAAGA,EAAIO,EAAOP,IACzB/C,EAAKuD,KAAKP,EAAW,IAAK,IAE5B,OAAOhD,G,OCHM4D,EAfD,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,cAAeT,EAAc,EAAdA,QAAc,EACpBU,mBAASV,KADW,mBACrCpD,EADqC,KAC/B+D,EAD+B,KAEtCC,EAAiBH,EAEvB,OACE,gCACE,8BACE,wBAAQI,QAAS,kBAAMF,EAAQX,MAA/B,2BAGF,cAACY,EAAD,CAAgBhE,KAAMA,QCEbkE,EATH,WACV,OACE,sBAAKC,UAAU,MAAf,UACE,cAAC,EAAD,CAAON,cAAe9D,EAAiBqD,QAASA,IAChD,cAAC,EAAD,CAAOS,cAAetB,EAAgBa,QAASO,QCNrDS,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.500df24c.chunk.js","sourcesContent":["import * as d3 from 'd3';\nimport React, { useRef, useEffect, useCallback } from 'react';\n\nconst mainWidth = 800;\nconst mainHeight = 400;\n\nconst margin = { top: 10, right: 30, bottom: 80, left: 50 };\nconst width = mainWidth - margin.left - margin.right;\nconst height = mainHeight - margin.top - margin.bottom;\n\nfunction StackedBarChart({ data }) {\n  const ref = useRef();\n\n  const groups = data.map((d) => d.time);\n  const subgroups = Object.keys(data[0]).slice(1);\n  const stackedData = d3.stack().keys(subgroups)(data);\n  const color = d3\n    .scaleOrdinal()\n    .domain(subgroups)\n    .range(['pink', 'magenta', 'purple']);\n\n  const xAxis = d3.scaleBand().domain(groups).range([0, width]).padding([0.2]);\n  const yAxis = d3.scaleLinear().domain([0, 60]).range([height, 0]);\n\n  const updateBars = (selection) => {\n    selection\n      .selectAll('rect')\n      .data(\n        (d) => d,\n        (d) => d.data.time\n      )\n      .join(\n        (enter) =>\n          enter\n            .append('rect')\n            .attr('class', 'bar')\n            .attr('x', (d) => xAxis(d.data.time))\n            .attr('transform', `translate(${margin.left})`)\n            .attr('y', (d) => yAxis(d[1]))\n            .attr('height', (d) => yAxis(d[0]) - yAxis(d[1]))\n            .attr('width', xAxis.bandwidth()),\n        (update) => {\n          update\n            .transition()\n            .attr('y', (d) => yAxis(d[1]))\n            .attr('height', (d) => yAxis(d[0]) - yAxis(d[1]));\n        }\n      );\n  };\n\n  const draw = useCallback(() => {\n    const svg = d3.select(ref.current);\n\n    // update x-axis\n    svg\n      .select('.x-axis')\n      .call(d3.axisBottom(xAxis))\n      .selectAll('text')\n      .text((d) => d.slice(11))\n      .attr('transform', 'translate(-13,26) rotate(-90)');\n\n    // update y-axis\n    svg\n      .select('.y-axis')\n      .attr('transform', `translate(${margin.left})`)\n      .call(d3.axisLeft(yAxis));\n\n    svg\n      .selectAll('g.stacks')\n      .selectAll('g.stack')\n      .data(stackedData)\n      .join(\n        (enter) => {\n          const g = enter.append('g').attr('class', 'stack');\n          g.append('g')\n            .attr('class', 'bars')\n            .attr('fill', (d) => color(d.key));\n\n          updateBars(g.select('.bars'));\n\n          return g;\n        },\n        (update) => {\n          updateBars(update.select('.bars'));\n        }\n      );\n  }, [data]);\n\n  useEffect(() => {\n    draw();\n  }, [data, draw]);\n\n  // initialize graph\n  useEffect(() => {\n    const svg = d3.select(ref.current);\n\n    svg\n      .attr('width', width + margin.left + margin.right)\n      .attr('height', height + margin.top + margin.bottom)\n      .append('g')\n      .attr('class', 'stacks');\n\n    // create x-axis\n    svg\n      .append('g')\n      .attr('class', 'x-axis')\n      .attr('transform', `translate(${margin.left}, ${height})`);\n\n    // create y-axis\n    svg.append('g').attr('class', 'y-axis');\n\n    draw();\n  }, []);\n\n  return <svg ref={ref}></svg>;\n}\n\nexport default StackedBarChart;\n","import * as d3 from 'd3';\nimport React, { useCallback, useRef, useEffect } from 'react';\n\nconst rectWidth = 30;\n\nfunction SingleBarChart({ data }) {\n  const ref = useRef();\n  const height = Math.max(Math.max.apply(null, data), 200);\n  const width = rectWidth * data.length + 100;\n\n  const draw = useCallback(() => {\n    const svg = d3.select(ref.current);\n    const xScale = d3\n      .scaleBand()\n      .domain(Object.keys(data))\n      .range([0, width])\n      .padding(0.3);\n\n    const yScale = d3.scaleLinear().domain([0, height]).range([height, 0]);\n    svg\n      .selectAll('g')\n      .data(data)\n      .join(\n        (enter) => {\n          const g = enter.append('g');\n\n          g.append('rect')\n            .attr('x', (_, i) => xScale(i))\n            .attr('y', (d) => yScale(d))\n            .attr('height', (d) => d)\n            .attr('width', rectWidth)\n            .attr('stroke-width', 1)\n            .attr('stroke', 'plum')\n            .attr('fill', 'pink');\n\n          g.append('text')\n            .text((d) => d)\n            .join('text')\n            .attr('x', (_, i) => xScale(i))\n            .attr('y', (d) => yScale(d))\n            .attr('width', rectWidth)\n            .attr('dominant-baseline', 'hanging');\n\n          return g;\n        },\n        (update) => {\n          update\n            .select('rect')\n            .transition()\n            .attr('y', (d) => yScale(d))\n            .attr('height', (d) => d);\n          update\n            .select('text')\n            .transition()\n            .text((d) => d)\n            .attr('y', (d) => yScale(d));\n        }\n      );\n  }, [data, height, width]);\n\n  useEffect(() => {\n    d3.select(ref.current).attr('width', width).attr('height', height);\n  }, []);\n\n  useEffect(() => {\n    draw();\n    return () => {};\n  }, [data, draw]);\n\n  return <svg ref={ref}></svg>;\n}\n\nexport default SingleBarChart;\n","function randomizer(max = 1, min = 0) {\n  return Math.round(Math.random() * (max - min) + min);\n}\n\nexport const getData = (maxSize = 10, count = 20) => {\n  const data = [];\n  for (let i = 0; i < count; i++) {\n    data.push({\n      time: `2021-05-05 10:00:0${i}`,\n      cat: randomizer(maxSize),\n      dog: randomizer(maxSize),\n      fish: randomizer(maxSize),\n    });\n  }\n  return data;\n};\n\nexport const getSingleData = (count = 20) => {\n  const data = [];\n  for (let i = 0; i < count; i++) {\n    data.push(randomizer(100, 1));\n  }\n  return data;\n};\n","import { useState } from 'react';\n\n// https://www.d3-graph-gallery.com/graph/barplot_stacked_basicWide.html\n\nconst Graph = ({ componentProp, getData }) => {\n  const [data, setData] = useState(getData());\n  const GraphComponent = componentProp;\n\n  return (\n    <div>\n      <div>\n        <button onClick={() => setData(getData())}>Update Data</button>\n      </div>\n\n      <GraphComponent data={data} />\n    </div>\n  );\n};\n\nexport default Graph;\n","import StackedBarChart from \"./StackedBarChart\";\nimport SingleBarChart from \"./SingleBarChart\";\nimport { getSingleData, getData } from \"./data\";\nimport Graph from \"./Graph\";\n\n// https://www.d3-graph-gallery.com/graph/barplot_stacked_basicWide.html\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Graph componentProp={StackedBarChart} getData={getData} />\n      <Graph componentProp={SingleBarChart} getData={getSingleData} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}