{"version":3,"sources":["data.js","Graph.js","graphs/StackedBarChart.js","graphs/SingleBarChart.js","graphs/ScatterChart.js","graphs/LineChart.js","graphs/PieChart.js","App.js","index.js"],"names":["randomizer","max","min","Math","round","random","types","type","color","animals","map","dataColors","getData","maxSize","data","count","i","d","reduce","acc","a","push","time","getSingleData","getLineData","animal","last","next","x","y","getScatterData","r","length","getPieData","letter","Graph","componentProp","useState","setData","GraphComponent","onClick","newData","margin","width","height","StackedBarChart","ref","useRef","groups","subgroups","Object","keys","slice","stackedData","d3","domain","range","xScale","padding","yScale","rangeRound","updateBars","useCallback","selection","selectAll","join","enter","append","attr","bandwidth","style","call","transition","duration","on","mouseover","mouseleave","update","draw","svg","current","select","text","values","g","key","subgroupName","this","parentNode","datum","useEffect","SingleBarChart","textTransform","_","exit","remove","sort","b","ScatterChart","e","target","__data__","delay","u","LineChart","flat","dPath","mainWidth","radius","textRotate","endAngle","PI","startAngle","PieChart","pie","value","pieData","entries","arcGenerator","innerRadius","outerRadius","centroid","mainHeight","App","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.90c4813d.chunk.js","sourcesContent":["function randomizer(max = 1, min = 0) {\n  return Math.round(Math.random() * (max - min) + min);\n}\n\nconst types = [\n  { type: \"cat\", color: \"pink\" },\n  { type: \"dog\", color: \"magenta\" },\n  { type: \"fish\", color: \"purple\" },\n  { type: \"cow\", color: \"green\" },\n  { type: \"mouse\", color: \"lightblue\" },\n];\n\nexport const animals = types.map(({ type }) => type);\nexport const dataColors = types.map(({ color }) => color);\n\nexport const getData = (maxSize = 100) => {\n  const data = [];\n  const count = randomizer(25, 10);\n  for (let i = 0; i < count; i++) {\n    const d = animals.reduce((acc, a) => {\n      acc[a] = randomizer(maxSize);\n      return acc;\n    }, {});\n\n    data.push({\n      time: `2021-05-05 10:00:0${i}`,\n      ...d,\n    });\n  }\n  return data;\n};\n\nexport const getSingleData = () => {\n  const data = [];\n  const count = randomizer(25, 10);\n  for (let i = 0; i < count; i++) {\n    data.push(randomizer(100, 1));\n  }\n  return data;\n};\n\nexport const getLineData = () => {\n  const count = 1 * 1000;\n  const data = animals.map((animal) => {\n    const d = [];\n    let last = randomizer(100, 1);\n    for (let i = 0; i < count; i++) {\n      const next = last + randomizer(1, -1);\n      d.push({ x: i, y: next });\n      last = next;\n    }\n    return [animal, d];\n  });\n\n  return data;\n};\n\nexport const getScatterData = () => {\n  const data = [];\n  const count = randomizer(50, 10);\n  for (let i = 0; i < count; i++) {\n    data.push({\n      x: randomizer(100, 5),\n      y: randomizer(100, 10),\n      r: randomizer(20, 10),\n      type: animals[i % animals.length],\n    });\n  }\n  return data;\n};\n\nexport const getPieData = () => {\n  return animals.reduce((acc, letter) => {\n    acc[letter] = randomizer(20, 3);\n    return acc;\n  }, {});\n};\n","import { useState } from \"react\";\n\n// https://www.d3-graph-gallery.com/graph/barplot_stacked_basicWide.html\n\nconst Graph = ({ componentProp, getData }) => {\n  const [data, setData] = useState(getData());\n  const GraphComponent = componentProp;\n\n  return (\n    <div>\n      <div>\n        <button\n          onClick={() => {\n            const newData = getData();\n            setData(newData);\n          }}\n        >\n          Update Data\n        </button>\n      </div>\n\n      <GraphComponent data={data} />\n    </div>\n  );\n};\n\nexport default Graph;\n","import * as d3 from \"d3\";\nimport React, { useRef, useEffect, useCallback } from \"react\";\nimport { dataColors } from \"../data\";\n\n// https://www.d3-graph-gallery.com/graph/barplot_stacked_basicWide.html\n\nconst mainWidth = 1000;\nconst mainHeight = 400;\n\nconst margin = { top: 20, right: 30, bottom: 50, left: 50 };\nconst width = mainWidth - margin.left - margin.right;\nconst height = mainHeight - margin.top - margin.bottom;\n\nfunction StackedBarChart({ data }) {\n  const ref = useRef();\n\n  const groups = data.map((d) => d.time);\n  const subgroups = Object.keys(data[0]).slice(1);\n  const stackedData = d3.stack().keys(subgroups)(data);\n  const color = d3.scaleOrdinal().domain(subgroups).range(dataColors);\n\n  const xScale = d3.scaleBand().range([0, width]).padding([0.2]);\n  const yScale = d3.scaleLinear().rangeRound([height, 0]);\n\n  const updateBars = useCallback(\n    (selection) => {\n      selection\n        .selectAll(\"rect\")\n        .data((d) => d)\n        .join(\n          (enter) =>\n            enter\n              .append(\"rect\")\n              .attr(\"class\", \"bar\")\n              .attr(\"height\", (d) => yScale(d[0]) - yScale(d[1]))\n              .attr(\"width\", xScale.bandwidth())\n              .attr(\"x\", (d) => xScale(d.data.time))\n              .attr(\"y\", (d) => yScale(d[1]))\n              .attr(\"stroke\", \"grey\")\n              .style(\"opacity\", 0)\n              .call((enter) =>\n                enter.transition().duration(500).style(\"opacity\", 1)\n              )\n              .on(\"mouseover\", mouseover)\n              .on(\"mouseleave\", mouseleave),\n          (update) => {\n            update\n              .transition()\n              .attr(\"height\", (d) => yScale(d[0]) - yScale(d[1]))\n              .attr(\"width\", xScale.bandwidth())\n              .attr(\"x\", (d) => xScale(d.data.time))\n              .attr(\"y\", (d) => yScale(d[1]));\n          }\n        );\n    },\n    [xScale, yScale]\n  );\n\n  const draw = useCallback(() => {\n    const svg = d3.select(ref.current);\n\n    // update x-axis\n    xScale.domain(groups);\n    svg\n      .select(\".x-axis\")\n      .call(d3.axisBottom(xScale))\n      .selectAll(\"text\")\n      .text((d) => d.slice(11))\n      .attr(\"transform\", \"translate(-13,26) rotate(-90)\");\n\n    // update y-axis\n    yScale.domain([0, d3.max(data, (d) => d3.sum(Object.values(d))) * 1.2]);\n    svg.select(\".y-axis\").transition().call(d3.axisLeft(yScale));\n\n    svg\n      .selectAll(\"g.stacks\")\n      .selectAll(\"g.stack\")\n      .data(stackedData)\n      .join(\n        (enter) => {\n          const g = enter.append(\"g\").attr(\"class\", (d) => `stack ${d.key}`);\n\n          g.append(\"g\")\n            .attr(\"class\", \"bars\")\n            .attr(\"fill\", (d) => color(d.key));\n\n          updateBars(g.select(\".bars\"));\n\n          return g;\n        },\n        (update) => {\n          updateBars(update.select(\".bars\"));\n        }\n      );\n  }, [data, color, groups, stackedData, updateBars, xScale, yScale]);\n\n  const mouseover = function () {\n    const subgroupName = d3.select(this.parentNode).datum().key;\n    d3.select(ref.current).selectAll(\".bar\").style(\"opacity\", 0.2);\n    d3.select(ref.current)\n      .selectAll(`.${subgroupName} rect`)\n      .style(\"opacity\", 1);\n  };\n\n  const mouseleave = function () {\n    d3.select(ref.current).selectAll(\".bar\").style(\"opacity\", 0.8);\n  };\n\n  // initialize graph\n  useEffect(() => {\n    const svg = d3.select(ref.current);\n    // create main viewport\n    svg\n      .attr(\"width\", mainWidth)\n      .attr(\"height\", mainHeight)\n      .append(\"g\")\n      .attr(\"class\", \"stacks\")\n      .attr(\"transform\", `translate(${margin.left})`);\n\n    // create x-axis\n    svg\n      .append(\"g\")\n      .attr(\"class\", \"x-axis\")\n      .attr(\"transform\", `translate(${margin.left}, ${height})`);\n\n    // create y-axis\n    svg\n      .append(\"g\")\n      .attr(\"class\", \"y-axis\")\n      .attr(\"transform\", `translate(${margin.left})`);\n  }, []);\n\n  useEffect(() => {\n    draw();\n  }, [data, draw]);\n\n  return (\n    <div style={{ padding: \"10px 0\" }}>\n      <svg ref={ref}></svg>\n    </div>\n  );\n}\n\nexport default StackedBarChart;\n","import * as d3 from \"d3\";\nimport React, { useCallback, useRef, useEffect } from \"react\";\nimport { dataColors } from \"../data\";\n\nconst mainWidth = 1000;\nconst mainHeight = 300;\n\nconst margin = { top: 20, right: 30, bottom: 50, left: 50 };\nconst width = mainWidth - margin.left - margin.right;\nconst height = mainHeight - margin.top - margin.bottom;\n\nfunction SingleBarChart({ data }) {\n  const ref = useRef();\n\n  const xScale = d3.scaleBand().range([0, width]).padding(0.3);\n  const yScale = d3.scaleLinear().range([height, 0]);\n\n  const sortAscending = () => {\n    data.sort((a, b) => d3.ascending(a, b));\n    draw();\n  };\n\n  const sortDesc = () => {\n    data.sort((a, b) => d3.descending(a, b));\n    draw();\n  };\n\n  const textTransform = useCallback(\n    (d) => {\n      return d > 10\n        ? `translate(${xScale.bandwidth() / 2}, 15)`\n        : `translate(${xScale.bandwidth() / 2}, -2)`;\n    },\n    [xScale]\n  );\n\n  const draw = useCallback(() => {\n    const svg = d3.select(ref.current);\n\n    xScale.domain(Object.keys(data));\n    svg\n      .select(\".x-axis\")\n      .call(d3.axisBottom(xScale))\n      .selectAll(\"text\")\n      .text((d) => +d + 1);\n\n    yScale.domain([0, d3.max(data) * 1.1]);\n    svg.select(\".y-axis\").transition().call(d3.axisLeft(yScale));\n\n    svg\n      .selectAll(\".bars\")\n      .selectAll(\".bar\")\n      .data(data)\n      .join(\n        (enter) => {\n          const g = enter.append(\"g\").attr(\"class\", \"bar\");\n\n          g.append(\"rect\")\n            .attr(\"x\", (_, i) => xScale(i))\n            .attr(\"y\", (d) => yScale(d))\n            .attr(\"height\", (d) => height - yScale(d))\n            .attr(\"width\", xScale.bandwidth())\n            .attr(\"stroke-width\", 1)\n            .attr(\"stroke\", \"black\")\n            .attr(\"fill\", dataColors[0]);\n\n          g.append(\"text\")\n            .text((d) => d)\n            .join(\"text\")\n            .attr(\"x\", (_, i) => xScale(i))\n            .attr(\"y\", (d) => yScale(d))\n            .attr(\"transform\", textTransform)\n            .attr(\"text-anchor\", \"middle\");\n\n          return g;\n        },\n        (update) => {\n          update\n            .select(\"rect\")\n            .transition()\n            .attr(\"x\", (_, i) => xScale(i))\n            .attr(\"y\", (d) => yScale(d))\n            .attr(\"height\", (d) => height - yScale(d))\n            .attr(\"width\", xScale.bandwidth());\n\n          update\n            .select(\"text\")\n            .transition()\n            .text((d) => d)\n            .attr(\"x\", (_, i) => xScale(i))\n            .attr(\"y\", (d) => yScale(d))\n            .attr(\"transform\", textTransform);\n        },\n        (exit) => {\n          exit.select(\"text\").remove();\n          exit.select(\"rect\").transition().style(\"opacity\", 0);\n          exit.transition().remove();\n        }\n      );\n  }, [data, textTransform, xScale, yScale]);\n\n  useEffect(() => {\n    const svg = d3.select(ref.current);\n\n    // create viewport\n    svg\n      .attr(\"width\", mainWidth)\n      .attr(\"height\", mainHeight)\n      .append(\"g\")\n      .attr(\"class\", \"bars\")\n      .attr(\"transform\", `translate(${margin.left})`);\n\n    // create x-axis\n    svg\n      .append(\"g\")\n      .attr(\"class\", \"x-axis\")\n      .attr(\"transform\", `translate(${margin.left}, ${height})`);\n\n    // create y-axis\n    svg\n      .append(\"g\")\n      .attr(\"class\", \"y-axis\")\n      .attr(\"transform\", `translate(${margin.left})`);\n  }, []);\n\n  useEffect(() => {\n    draw();\n  }, [data, draw]);\n\n  return (\n    <div>\n      <div>\n        <button onClick={sortAscending}>asc</button>\n        <button onClick={sortDesc}>desc</button>\n      </div>\n      <div style={{ padding: \"10px 0\" }}>\n        <svg ref={ref}></svg>\n      </div>\n    </div>\n  );\n}\n\nexport default SingleBarChart;\n","import * as d3 from \"d3\";\nimport React, { useRef, useEffect, useCallback } from \"react\";\nimport { dataColors } from \"../data\";\n\nconst mainWidth = 1000;\nconst mainHeight = 400;\n\nconst margin = { top: 20, right: 30, bottom: 50, left: 50 };\nconst width = mainWidth - margin.left - margin.right;\nconst height = mainHeight - margin.top - margin.bottom;\n\nfunction ScatterChart({ data }) {\n  const ref = useRef();\n\n  const xScale = d3.scaleLinear().range([0, width]);\n  const yScale = d3.scaleLinear().rangeRound([height, 0]);\n  const color = d3\n    .scaleOrdinal()\n    .domain(data.map((d) => d.type))\n    .range(dataColors);\n\n  const draw = useCallback(() => {\n    const svg = d3.select(ref.current);\n\n    // update x-axis\n    xScale.domain([0, d3.max(data, (d) => d.x)]);\n    svg.select(\".x-axis\").call(d3.axisBottom(xScale));\n\n    // update y-axis\n    yScale.domain([0, d3.max(data, (d) => d.y) * 1.2]);\n    svg.select(\".y-axis\").transition().call(d3.axisLeft(yScale));\n\n    svg\n      .selectAll(\".scatter\")\n      .selectAll(\"circle\")\n      .data(data)\n      .join(\n        (enter) => {\n          enter\n            .append(\"circle\")\n            .attr(\"fill\", \"red\")\n            .attr(\"stroke\", \"white\")\n            .attr(\"cx\", (d) => xScale(d.x))\n            .attr(\"cy\", (d) => yScale(d.y))\n            .attr(\"r\", (d) => d.r)\n            .call((e) => e.transition().attr(\"fill\", (d) => color(d.type)))\n            .on(\"mouseover\", (e) => {\n              d3.select(e.target)\n                .transition()\n                .style(\"opacity\", 0.8)\n                .attr(\"r\", 25);\n            })\n            .on(\"mouseleave\", (e) => {\n              const data = e.target.__data__;\n              d3.select(e.target)\n                .transition()\n                .attr(\"fill\", color(data.type))\n                .attr(\"r\", data.r);\n            });\n          return enter;\n        },\n        (update) => {\n          update\n            .transition()\n            .delay((_, i) => i * 50)\n            .duration(500)\n            .attr(\"fill\", \"none\")\n            .attr(\"stroke\", \"blue\")\n            .attr(\"cx\", (d) => xScale(d.x))\n            .attr(\"cy\", (d) => yScale(d.y))\n            .call((u) =>\n              u\n                .transition()\n                .duration(500)\n                .attr(\"stroke\", \"white\")\n                .attr(\"fill\", (d) => color(d.type))\n            );\n        },\n        (exit) =>\n          exit\n            .transition()\n            .duration(1000)\n            .attr(\"fill\", \"yellow\")\n            .attr(\"stroke-width\", 4)\n            .attr(\"stroke\", \"black\")\n            .call((exit) => exit.style(\"opacity\", 0).remove())\n      );\n  }, [data, color, xScale, yScale]);\n\n  // initialize graph\n  useEffect(() => {\n    const svg = d3.select(ref.current);\n    // create main viewport\n    svg\n      .attr(\"width\", mainWidth)\n      .attr(\"height\", mainHeight)\n      .append(\"g\")\n      .attr(\"class\", \"scatter\")\n      .attr(\"transform\", `translate(${margin.left})`);\n\n    // create x-axis\n    svg\n      .append(\"g\")\n      .attr(\"class\", \"x-axis\")\n      .attr(\"transform\", `translate(${margin.left}, ${height})`);\n\n    // create y-axis\n    svg\n      .append(\"g\")\n      .attr(\"class\", \"y-axis\")\n      .attr(\"transform\", `translate(${margin.left})`);\n  }, []);\n\n  useEffect(() => {\n    draw();\n  }, [data, draw]);\n\n  return (\n    <div style={{ padding: \"10px 0\" }}>\n      <svg ref={ref}></svg>\n    </div>\n  );\n}\n\nexport default ScatterChart;\n","import * as d3 from \"d3\";\nimport React, { useRef, useEffect, useCallback } from \"react\";\nimport { animals, dataColors } from \"../data\";\n\nconst mainWidth = 1000;\nconst mainHeight = 400;\n\nconst margin = { top: 20, right: 30, bottom: 50, left: 50 };\nconst width = mainWidth - margin.left - margin.right;\nconst height = mainHeight - margin.top - margin.bottom;\n\nfunction LineChart({ data }) {\n  const ref = useRef();\n\n  const xScale = d3.scaleLinear().range([0, width]);\n  const yScale = d3.scaleLinear().rangeRound([height, 0]);\n  const color = d3.scaleOrdinal().domain(animals).range(dataColors);\n\n  const draw = useCallback(() => {\n    const svg = d3.select(ref.current);\n\n    // update x-axis\n    xScale.domain([0, d3.max(data, (d) => d3.max(d[1], (d) => d.x))]);\n    svg.select(\".x-axis\").call(d3.axisBottom(xScale));\n\n    // update y-axis\n    yScale.domain(d3.extent(data.map(([_, d]) => d).flat(), (d) => d.y));\n    svg.select(\".y-axis\").transition().call(d3.axisLeft(yScale));\n\n    svg\n      .selectAll(\".lines\")\n      .selectAll(\".line\")\n      .data(data, (d) => d[0]) // <---- wrap data in array!!!!\n      .join(\n        (enter) => {\n          const line = enter.append(\"g\").attr(\"class\", (d) => `line ${d[0]}`);\n\n          return line\n            .append(\"path\")\n            .attr(\"fill\", \"none\")\n            .attr(\"stroke-width\", 2)\n            .attr(\"stroke\", (d) => color(d[0]))\n            .attr(\"d\", (dPath) => {\n              return d3\n                .line()\n                .x((d) => xScale(d.x))\n                .y((d) => yScale(d.y))(dPath[1]);\n            })\n            .on(\"mouseover\", mouseover)\n            .on(\"mouseleave\", mouseleave);\n        },\n        (update) => {\n          update\n            .select(\"path\")\n            .transition()\n            .attr(\"fill\", \"none\")\n            .attr(\"stroke-width\", 2)\n            .attr(\"stroke\", (d) => color(d[0]))\n            .attr(\"d\", (dPath) => {\n              return d3\n                .line()\n                .x((d) => xScale(d.x))\n                .y((d) => yScale(d.y))(dPath[1]);\n            });\n        }\n      );\n  }, [data, xScale, yScale, color]);\n\n  const mouseover = function () {\n    const subgroupName = d3.select(this.parentNode).datum()[0];\n    d3.select(ref.current).selectAll(\".line\").style(\"opacity\", 0.2);\n    d3.select(ref.current).selectAll(`.${subgroupName}`).style(\"opacity\", 1);\n  };\n\n  const mouseleave = function () {\n    d3.select(ref.current).selectAll(\".line\").style(\"opacity\", 1);\n  };\n\n  // initialize graph\n  useEffect(() => {\n    const svg = d3.select(ref.current);\n    // create main viewport\n    svg\n      .attr(\"width\", mainWidth)\n      .attr(\"height\", mainHeight)\n      .append(\"g\")\n      .attr(\"class\", \"lines\")\n      .attr(\"transform\", `translate(${margin.left})`);\n\n    // create x-axis\n    svg\n      .append(\"g\")\n      .attr(\"class\", \"x-axis\")\n      .attr(\"transform\", `translate(${margin.left}, ${height})`);\n\n    // create y-axis\n    svg\n      .append(\"g\")\n      .attr(\"class\", \"y-axis\")\n      .attr(\"transform\", `translate(${margin.left})`);\n  }, []);\n\n  useEffect(() => {\n    draw();\n  }, [data, draw]);\n\n  return (\n    <div style={{ padding: \"10px 0\" }}>\n      <svg ref={ref}></svg>\n    </div>\n  );\n}\n\nexport default LineChart;\n","import * as d3 from \"d3\";\nimport React, { useRef, useEffect, useCallback } from \"react\";\nimport { dataColors } from \"../data\";\n\nconst mainWidth = 1000;\nconst mainHeight = 400;\n\nconst margin = { top: 20, right: 30, bottom: 50, left: 50 };\nconst width = mainWidth - margin.left - margin.right;\nconst height = mainHeight - margin.top - margin.bottom;\n\nconst radius = Math.min(width, height) / 2;\n\n// https://stackoverflow.com/a/41958108\nconst textRotate = (d) =>\n  d.endAngle < Math.PI\n    ? ((d.startAngle / 2 + d.endAngle / 2) * 180) / Math.PI\n    : ((d.startAngle / 2 + d.endAngle / 2 + Math.PI) * 180) / Math.PI;\n\nfunction PieChart({ data }) {\n  const ref = useRef();\n\n  const color = d3.scaleOrdinal().domain(Object.keys(data)).range(dataColors);\n  const pie = d3\n    .pie()\n    .value(({ value }) => {\n      return value;\n    })\n    // make sure order is constant and pieces don't flop around\n    .sort((a, b) => d3.ascending(a.key, b.key));\n\n  const draw = useCallback(() => {\n    const svg = d3.select(ref.current);\n\n    const pieData = pie(\n      Object.entries(data).map(([key, value]) => ({ key, value }))\n    );\n    const arcGenerator = d3.arc().innerRadius(0).outerRadius(radius);\n\n    svg\n      .selectAll(\".pie\")\n      .selectAll(\".piece\")\n      .data(pieData, (d) => d.data.key)\n      .join(\n        (enter) => {\n          const g = enter.append(\"g\").attr(\"class\", \"piece\");\n\n          g.append(\"path\")\n            .attr(\"d\", arcGenerator)\n            .attr(\"fill\", (d) => color(d.data.key))\n            .attr(\"stroke\", \"black\")\n            .style(\"stroke-width\", \"2px\")\n            .style(\"opacity\", 0.7);\n\n          // Now add the annotation. Use the centroid method to get the best coordinates\n          g.append(\"text\")\n            .text((d) => d.data.key)\n            .attr(\n              \"transform\",\n              (d) =>\n                `translate(${arcGenerator.centroid(\n                  d\n                )}) rotate(-90) rotate(${textRotate(d)})`\n            )\n            .style(\"text-anchor\", \"middle\")\n            .style(\"font-size\", 17);\n\n          return g;\n        },\n        (update) => {\n          update.select(\"path\").transition().attr(\"d\", arcGenerator);\n\n          update\n            .select(\"text\")\n            .transition()\n            .text((d) => d.data.key)\n            .attr(\n              \"transform\",\n              (d) =>\n                `translate(${arcGenerator.centroid(\n                  d\n                )}) rotate(-90) rotate(${textRotate(d)})`\n            );\n        }\n      );\n  }, [data, pie, color]);\n\n  // initialize graph\n  useEffect(() => {\n    d3.select(ref.current)\n      .attr(\"width\", mainWidth)\n      .attr(\"height\", mainHeight)\n      .append(\"g\")\n      .attr(\"class\", \"pie\")\n      .attr(\"transform\", `translate(${mainWidth / 2}, ${mainHeight / 2})`);\n  }, []);\n\n  useEffect(() => {\n    draw();\n  }, [data, draw]);\n\n  return (\n    <div style={{ padding: \"10px 0\" }}>\n      <svg ref={ref}></svg>\n    </div>\n  );\n}\n\nexport default PieChart;\n","import {\n  getSingleData,\n  getData,\n  getScatterData,\n  getLineData,\n  getPieData,\n} from \"./data\";\nimport Graph from \"./Graph\";\nimport StackedBarChart from \"./graphs/StackedBarChart\";\nimport SingleBarChart from \"./graphs/SingleBarChart\";\nimport ScatterChart from \"./graphs/ScatterChart\";\nimport LineChart from \"./graphs/LineChart\";\nimport PieChart from \"./graphs/PieChart\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Graph componentProp={PieChart} getData={getPieData} />\n      <Graph componentProp={LineChart} getData={getLineData} />\n      <Graph componentProp={ScatterChart} getData={getScatterData} />\n      <Graph componentProp={StackedBarChart} getData={getData} />\n      <Graph componentProp={SingleBarChart} getData={getSingleData} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}