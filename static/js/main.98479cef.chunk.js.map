{"version":3,"sources":["StackedBarChart.js","SingleBarChart.js","data.js","Graph.js","App.js","index.js"],"names":["margin","width","height","sharedTranslate","StackedBarChart","data","ref","useRef","groups","map","d","time","subgroups","Object","keys","slice","stackedData","d3","color","domain","range","xAxis","padding","yAxis","rangeRound","updateBars","selection","selectAll","join","enter","append","attr","bandwidth","update","transition","draw","useCallback","svg","current","select","call","text","values","g","key","useEffect","initialize","style","SingleBarChart","Math","max","apply","length","xScale","yScale","_","i","randomizer","min","round","random","getData","maxSize","count","push","cat","dog","fish","cow","mouse","getSingleData","Graph","componentProp","useState","setData","GraphComponent","onClick","App","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.98479cef.chunk.js","sourcesContent":["import * as d3 from \"d3\";\nimport React, { useRef, useEffect, useCallback } from \"react\";\n\nconst mainWidth = 1000;\nconst mainHeight = 600;\n\nconst margin = { top: 20, right: 30, bottom: 50, left: 50 };\nconst width = mainWidth - margin.left - margin.right;\nconst height = mainHeight - margin.top - margin.bottom;\nconst sharedTranslate = `translate(${margin.left}, ${margin.top})`;\n\nfunction StackedBarChart({ data }) {\n  const ref = useRef();\n\n  const groups = data.map((d) => d.time);\n  const subgroups = Object.keys(data[0]).slice(1);\n  const stackedData = d3.stack().keys(subgroups)(data);\n  const color = d3\n    .scaleOrdinal()\n    .domain(subgroups)\n    .range([\"pink\", \"magenta\", \"purple\", \"green\", \"lightblue\"]);\n\n  const xAxis = d3.scaleBand().range([0, width]).padding([0.2]);\n  const yAxis = d3.scaleLinear().rangeRound([height - margin.top, 0]);\n\n  const initialize = () => {\n    const svg = d3.select(ref.current);\n\n    // create main viewport\n    svg\n      .attr(\"width\", mainWidth)\n      .attr(\"height\", mainHeight)\n      .append(\"g\")\n      .attr(\"class\", \"stacks\");\n\n    // create x-axis\n    svg\n      .append(\"g\")\n      .attr(\"class\", \"x-axis\")\n      .attr(\"transform\", `translate(${margin.left}, ${height})`);\n\n    // create y-axis\n    svg.append(\"g\").attr(\"class\", \"y-axis\").attr(\"transform\", sharedTranslate);\n  };\n\n  const updateBars = (selection) => {\n    selection\n      .selectAll(\"rect\")\n      .data(\n        (d) => d,\n        (d) => d.data.time\n      )\n      .join(\n        (enter) =>\n          enter\n            .append(\"rect\")\n            .attr(\"class\", \"bar\")\n            .attr(\"x\", (d) => xAxis(d.data.time))\n            .attr(\"transform\", sharedTranslate)\n            .attr(\"y\", (d) => yAxis(d[1]))\n            .attr(\"height\", (d) => yAxis(d[0]) - yAxis(d[1]))\n            .attr(\"width\", xAxis.bandwidth()),\n        (update) => {\n          update\n            .transition()\n            .attr(\"x\", (d) => xAxis(d.data.time))\n            .attr(\"y\", (d) => yAxis(d[1]))\n            .attr(\"height\", (d) => yAxis(d[0]) - yAxis(d[1]));\n        }\n      );\n  };\n\n  const draw = useCallback(() => {\n    const svg = d3.select(ref.current);\n\n    // update y-axis\n    xAxis.domain(groups);\n    svg\n      .select(\".x-axis\")\n      .call(d3.axisBottom(xAxis))\n      .selectAll(\"text\")\n      .text((d) => d.slice(11))\n      .attr(\"transform\", \"translate(-13,26) rotate(-90)\");\n\n    // update y-axis\n    yAxis.domain([0, d3.max(data, (d) => d3.sum(Object.values(d))) * 1.2]);\n    svg.select(\".y-axis\").transition().call(d3.axisLeft(yAxis));\n\n    svg\n      .selectAll(\"g.stacks\")\n      .selectAll(\"g.stack\")\n      .data(stackedData)\n      .join(\n        (enter) => {\n          const g = enter.append(\"g\").attr(\"class\", \"stack\");\n          g.append(\"g\")\n            .attr(\"class\", \"bars\")\n            .attr(\"fill\", (d) => color(d.key));\n\n          updateBars(g.select(\".bars\"));\n\n          return g;\n        },\n        (update) => {\n          updateBars(update.select(\".bars\"));\n        }\n      );\n  }, [data]);\n\n  useEffect(() => {\n    draw();\n  }, [data, draw]);\n\n  // initialize graph\n  useEffect(() => {\n    initialize();\n    draw();\n  }, []);\n\n  return (\n    <div style={{ padding: \"10px 0\" }}>\n      <svg ref={ref}></svg>\n    </div>\n  );\n}\n\nexport default StackedBarChart;\n","import * as d3 from 'd3';\nimport React, { useCallback, useRef, useEffect } from 'react';\n\nconst rectWidth = 30;\n\nfunction SingleBarChart({ data }) {\n  const ref = useRef();\n  const height = Math.max(Math.max.apply(null, data), 200);\n  const width = rectWidth * data.length + 100;\n\n  const draw = useCallback(() => {\n    const svg = d3.select(ref.current);\n    const xScale = d3\n      .scaleBand()\n      .domain(Object.keys(data))\n      .range([0, width])\n      .padding(0.3);\n\n    const yScale = d3.scaleLinear().domain([0, height]).range([height, 0]);\n    svg\n      .selectAll('g')\n      .data(data)\n      .join(\n        (enter) => {\n          const g = enter.append('g');\n\n          g.append('rect')\n            .attr('x', (_, i) => xScale(i))\n            .attr('y', (d) => yScale(d))\n            .attr('height', (d) => d)\n            .attr('width', rectWidth)\n            .attr('stroke-width', 1)\n            .attr('stroke', 'plum')\n            .attr('fill', 'pink');\n\n          g.append('text')\n            .text((d) => d)\n            .join('text')\n            .attr('x', (_, i) => xScale(i))\n            .attr('y', (d) => yScale(d))\n            .attr('width', rectWidth)\n            .attr('dominant-baseline', 'hanging');\n\n          return g;\n        },\n        (update) => {\n          update\n            .select('rect')\n            .transition()\n            .attr('y', (d) => yScale(d))\n            .attr('height', (d) => d);\n          update\n            .select('text')\n            .transition()\n            .text((d) => d)\n            .attr('y', (d) => yScale(d));\n        }\n      );\n  }, [data, height, width]);\n\n  useEffect(() => {\n    d3.select(ref.current).attr('width', width).attr('height', height);\n  }, []);\n\n  useEffect(() => {\n    draw();\n    return () => {};\n  }, [data, draw]);\n\n  return <svg ref={ref}></svg>;\n}\n\nexport default SingleBarChart;\n","function randomizer(max = 1, min = 0) {\n  return Math.round(Math.random() * (max - min) + min);\n}\n\nexport const getData = (maxSize = 100) => {\n  const data = [];\n  const count = randomizer(25, 10);\n  for (let i = 0; i < count; i++) {\n    data.push({\n      time: `2021-05-05 10:00:0${i}`,\n      cat: randomizer(maxSize),\n      dog: randomizer(maxSize),\n      fish: randomizer(maxSize),\n      cow: randomizer(maxSize),\n      mouse: randomizer(maxSize),\n    });\n  }\n  return data;\n};\n\nexport const getSingleData = (count = 20) => {\n  const data = [];\n  for (let i = 0; i < count; i++) {\n    data.push(randomizer(100, 1));\n  }\n  return data;\n};\n","import { useState } from 'react';\n\n// https://www.d3-graph-gallery.com/graph/barplot_stacked_basicWide.html\n\nconst Graph = ({ componentProp, getData }) => {\n  const [data, setData] = useState(getData());\n  const GraphComponent = componentProp;\n\n  return (\n    <div>\n      <div>\n        <button onClick={() => setData(getData())}>Update Data</button>\n      </div>\n\n      <GraphComponent data={data} />\n    </div>\n  );\n};\n\nexport default Graph;\n","import StackedBarChart from \"./StackedBarChart\";\nimport SingleBarChart from \"./SingleBarChart\";\nimport { getSingleData, getData } from \"./data\";\nimport Graph from \"./Graph\";\n\n// https://www.d3-graph-gallery.com/graph/barplot_stacked_basicWide.html\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Graph componentProp={StackedBarChart} getData={getData} />\n      <Graph componentProp={SingleBarChart} getData={getSingleData} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}